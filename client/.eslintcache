[{"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\index.js":"1","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\reportWebVitals.js":"2","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\App.js":"3","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Main.js":"4","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Footer.js":"5","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Header.js":"6","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\MyParticles.js":"7","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\HeaderBar.js":"8","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Itinerary.js":"9","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\ItineraryInfo.js":"10","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\SignIn.js":"11","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\SignUp.js":"12","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Container.js":"13","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Form.js":"14","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\ItineraryList.js":"15","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\MeteoCard.js":"16","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\CurrentCard.js":"17","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Card.js":"18","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\CssTextField.js":"19","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\EmptyContainer.js":"20"},{"size":573,"mtime":1607466139087,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1607466139088,"results":"23","hashOfConfig":"22"},{"size":4440,"mtime":1607615736096,"results":"24","hashOfConfig":"22"},{"size":339,"mtime":1607466139071,"results":"25","hashOfConfig":"22"},{"size":215,"mtime":1607466139069,"results":"26","hashOfConfig":"22"},{"size":157,"mtime":1607466139069,"results":"27","hashOfConfig":"22"},{"size":665,"mtime":1607466139071,"results":"28","hashOfConfig":"22"},{"size":3160,"mtime":1607520282428,"results":"29","hashOfConfig":"22"},{"size":1492,"mtime":1607532916608,"results":"30","hashOfConfig":"22"},{"size":14803,"mtime":1607626098168,"results":"31","hashOfConfig":"22"},{"size":6985,"mtime":1607619732397,"results":"32","hashOfConfig":"22"},{"size":7812,"mtime":1607619720951,"results":"33","hashOfConfig":"22"},{"size":2459,"mtime":1607615736097,"results":"34","hashOfConfig":"22"},{"size":7057,"mtime":1607533019568,"results":"35","hashOfConfig":"22"},{"size":14031,"mtime":1607621633567,"results":"36","hashOfConfig":"22"},{"size":10562,"mtime":1607625222698,"results":"37","hashOfConfig":"22"},{"size":5080,"mtime":1607519167816,"results":"38","hashOfConfig":"22"},{"size":5536,"mtime":1607615736097,"results":"39","hashOfConfig":"22"},{"size":501,"mtime":1607532916608,"results":"40","hashOfConfig":"22"},{"size":497,"mtime":1607519167817,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ij9bfo",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\index.js",[],["98","99"],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\reportWebVitals.js",[],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\App.js",["100","101","102"],"import React, { useState, useEffect } from \"react\"\r\nimport Header from \"./Header\"\r\nimport Main from \"./Main\"\r\nimport Footer from \"./Footer\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport SignIn from \"./SignIn\"\r\nimport HeaderBar from \"./HeaderBar\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport MyParticles from './MyParticles'\r\nimport Itinerary from \"./Itinerary\"\r\nimport ItineraryInfo from \"./ItineraryInfo\"\r\nimport SignUp from \"./SignUp\"\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setLogged] = useState({logged : false,\r\n                                      user_id : \"\"})\r\n                            \r\n  const [clickedItinMeteos, setClickedItinMeteos] = useState([]);\r\n  const [clickedItinId, setClickedItinId] = useState(\"\");\r\n  const [clickedItinName, setClickedItinName] = useState(\"\");\r\n\r\n  const signInDone = (userID) => {\r\n    setLogged({logged : true, \r\n                user_id : userID})\r\n  }\r\n\r\n  const logOut = () => {\r\n    setLogged({logged : false, \r\n                user_id : \"\"})\r\n  }\r\n  \r\n  \r\n  console.log(\"App : \" + user.logged + \" \" + user.user_id)\r\n  \r\n  return (\r\n    <Router>\r\n      <Box \r\n        component=\"div\"\r\n      >\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <hr />\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\">\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n                </div>\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/> \r\n              <Main logged = {user.logged}/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/itinerary\">\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n                </div>\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n              <Itinerary \r\n                user = {user.user_id} \r\n                setClickedItinMeteos={setClickedItinMeteos} \r\n                setClickedItinId={setClickedItinId}\r\n                setClickedItinName={setClickedItinName}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/myitinerary\">\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n                </div>\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/> \r\n              <ItineraryInfo \r\n                user = {user.user_id} \r\n                clickedItinMeteos={clickedItinMeteos} \r\n                clickedItinName={clickedItinName}\r\n                clickedItinId={clickedItinId}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/signup\">\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n                </div>\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n              <SignUp/>\r\n            </Route>\r\n\r\n            <Route exact path = \"/login\">\r\n                <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n                </div>\r\n                <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n                <SignIn logged = {user.logged} setLogged = {signInDone} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/logout\">\r\n              <div style={{\r\n                    position: \"fixed\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    bottom : \"2%\"\r\n                }}>\r\n                    <MyParticles />\r\n              </div>\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n            </Route>\r\n\r\n          </Switch>\r\n        </nav>\r\n      </Box>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Main.js",["103","104","105"],"import React from \"react\"\r\nimport Form from \"./Form\"\r\nimport Container from \"./Container\"\r\n//import Itinerary from \"./Itinerary\"\r\nimport \"../Css/search.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nfunction Main(props){\r\n\r\n    return(\r\n            <Form />\r\n    )\r\n}\r\n\r\nexport default Main","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Footer.js",[],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Header.js",[],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\MyParticles.js",[],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\HeaderBar.js",["106","107","108","109"],"import React , {useState , useEffect} from \"react\"\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Person from \"@material-ui/icons/Person\"\r\nimport Home from \"@material-ui/icons/Home\"\r\nimport {Link} from \"react-router-dom\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport MapMarkerPathIcon from 'mdi-react/MapMarkerPathIcon'\r\n\r\nfunction HeaderBar(props){\r\n\r\n       const handleClick = () => {\r\n              props.setLogged()\r\n       }\r\n\r\n       return(\r\n              <AppBar position=\"static\" style = {{color : \"white\", backgroundColor : \"Black\"}}>\r\n                     <Toolbar style = {{minHeight : \"50px\"}}>\r\n                            <Link to={\"/\"} style={{ textDecoration: 'none'}}>\r\n                                   <Button startIcon={ <Home style = {{color : \"white\"}}/> } style={{color : \"white\"}} >\r\n                                          Home\r\n                                   </Button> \r\n                            </Link>\r\n                            <div style = {{marginLeft : \"auto\"}}>\r\n                                   {props.logged ? \r\n                                          <Link to={\"/itinerary\"} style={{ textDecoration: 'none'}}>\r\n                                                 <Button variant=\"outlined\" style={{color : \"white\"}} startIcon = {<MapMarkerPathIcon size = {18}/>}>\r\n                                                        Your Itineraries\r\n                                                 </Button>\r\n                                          </Link>\r\n                                   :\r\n                                          null\r\n                                   }\r\n                            </div>\r\n                            <div style={{marginLeft : \"auto\"}}>\r\n                                   {props.logged ?  \r\n                                   (\r\n                                          <Link to={\"/\"} onClick = {handleClick} style={{ textDecoration: 'none'}}>\r\n                                                 <Button color=\"inherit\" startIcon = {<Person/>} style={{color : \"white\"}}>\r\n                                                        LogOut\r\n                                                 </Button>\r\n                                          </Link>\r\n                                   )\r\n                                          :\r\n                                   (\r\n                                          <Link to={\"/login\"} onClick = {handleClick} style={{ textDecoration: 'none'}}>\r\n                                                 <Button color=\"inherit\" startIcon = {<Person/>} style={{color : \"white\"}}>\r\n                                                        LogIn\r\n                                                 </Button>\r\n                                          </Link>\r\n                                   )\r\n                                   }\r\n                            </div>\r\n                     </Toolbar>\r\n              </AppBar>\r\n       )\r\n}\r\n\r\nexport default HeaderBar","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Itinerary.js",["110","111","112","113","114"],"import { makeStyles, Typography } from \"@material-ui/core\"\r\n// import List from \"@material-ui/core/List\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport ItineraryList from \"./ItineraryList\"\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\n// TRANSITION\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n// STYLE\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nfunction Itinerary(props) {\r\n    \r\n    // const [itinData, setItinData] = useState([]);\r\n    // const [done, setDone] = useState(false);\r\n    // const [open, setOpen] = useState(false);\r\n    // const [clickedItinId, setClickedItinId] = useState(\"\");\r\n    // const [clickedItinName, setClickedItinName] = useState(\"\");\r\n    // const [clickedItinMeteos, setClickedItinMeteos] = useState([]);\r\n\r\n    // const [loading, setLoading] = useState(false);\r\n    \r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ItineraryList \r\n                user={props.user} \r\n                setClickedItinId={props.setClickedItinId} \r\n                setClickedItinName={props.setClickedItinName} \r\n                setClickedItinMeteos={props.setClickedItinMeteos}\r\n\r\n                clickedItinMeteos={props.clickedItinMeteos} \r\n                clickedItinName={props.clickedItinName}\r\n                clickedItinId={props.clickedItinId}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Itinerary","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\ItineraryInfo.js",["115","116","117","118"],"import { makeStyles, Typography } from \"@material-ui/core\"\r\nimport Container from '@material-ui/core/Container';\r\nimport React, { useState, useEffect } from \"react\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Link } from \"react-router-dom\"\r\nimport MeteoCard from \"./MeteoCard\"\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport CssTextField from \"./CssTextField\"\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'date-fns';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    cssLabel: {\r\n        color: \"black\"\r\n    },\r\n\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'black !important'\r\n    },\r\n\r\n    multilineColor: {\r\n        color: \"black\"\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction ItineraryInfo(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [incomingMeteos, setIncomingMeteos] = useState(props.clickedItinMeteos);\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [clickedMeteoComp, setClickedMeteoComp] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date(''));\r\n\r\n    //console.log(incomingMeteos);\r\n\r\n    useEffect(() => {\r\n        const ids = incomingMeteos.map(item => {\r\n            if(!item.available){\r\n                patch(props.user, props.clickedItinId, item._id);\r\n            }\r\n        } )\r\n        get();\r\n    }, [])\r\n\r\n    async function patch(user_id, itinerary_id, meteo_id){\r\n        await fetch(\"/meteoComponents\" , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({\r\n                \"user_id\": user_id,\r\n                \"itinerary_id\": itinerary_id,\r\n                \"meteo_id\": meteo_id\r\n            })\r\n        }).then(response => response.json())\r\n        .then(function(data) {\r\n            console.log(data)\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            } else {\r\n                console.log(data.success)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n\r\n    }\r\n    \r\n    // console.log(props.clickedItinMeteos)\r\n    // console.log(incomingMeteos);\r\n    \r\n    \r\n    function handleCancelDel() {\r\n        setOpenPopUp(false);\r\n    }\r\n    \r\n    function handleClickDel(event) {\r\n        setOpenPopUp(true);\r\n        console.log(clickedMeteoComp);\r\n    }\r\n    \r\n    async function handleDelete() {\r\n        // console.log(props.clickedItinId)\r\n        // console.log(clickedMeteoComp)\r\n        setLoading(true);\r\n        await fetch('/meteoComponents', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n                \"user_id\": props.user,\r\n                \"itinerary_id\": props.clickedItinId,\r\n                \"meteo_id\": clickedMeteoComp\r\n            })\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            console.log(data)\r\n        })\r\n        .catch(error => console.error(error));\r\n        setOpenPopUp(false);\r\n        get();\r\n        \r\n    }\r\n    \r\n    async function get(){\r\n        await fetch('/meteoComponents/' + props.user + \"&\" + props.clickedItinId, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            //(console.log(data)\r\n            setIncomingMeteos(data);\r\n            setLoading(false);\r\n            // setItinData(data);\r\n        })\r\n        .catch(error => console.error(error))\r\n    }\r\n    \r\n    \r\n    function handleCancelAdd() {\r\n        setOpen(false)\r\n    }\r\n    \r\n    function handleClickAdd() {\r\n        setOpen(true);\r\n    }\r\n    \r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    \r\n    async function handleDone() {\r\n        setLoading(true);\r\n        addStageFetch();\r\n        setOpen(false);\r\n    }\r\n    \r\n    async function handleUpdate(){\r\n        setLoading(true);\r\n        incomingMeteos.map(item => {\r\n            patch(props.user, props.clickedItinId, item._id);\r\n        })\r\n        get();\r\n    }\r\n\r\n\r\n//    console.log(props.user)\r\n//    console.log(selectedDate);\r\n//    console.log(toUnix);\r\n    \r\n    async function addStageFetch(){\r\n        const unixDate=new Date(selectedDate).getTime()/1000\r\n        await fetch('/meteoComponents' , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"itinerary_id\": props.clickedItinId,\r\n                \"user_id\": props.user,\r\n                \"cityName\": name,\r\n                \"date\": unixDate,\r\n            })\r\n        }).then(resp => resp.json())\r\n        .then(function (data) {\r\n            console.log(data)\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n        \r\n        setName(\"\");\r\n\r\n        await fetch('/meteoComponents/' + props.user + \"&\" + props.clickedItinId, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            } else {\r\n                //(console.log(data)\r\n                setIncomingMeteos(data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error)\r\n            console.error(error)\r\n        })\r\n    }\r\n    \r\n    \r\n    function renderCards() {\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                spacing={3}\r\n            >\r\n                {incomingMeteos.map(item => (\r\n                    <Grid item>\r\n                        <MeteoCard\r\n                            key={item._id}\r\n                            item={item}\r\n                            handleClickDel={handleClickDel}\r\n                            setClickedMeteoComp={setClickedMeteoComp}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar style={{ minHeight: \"40px\", marginTop: \"5px\" }}>\r\n                <Link to={\"/itinerary\"} style={{ textDecoration: 'none' }}>\r\n                    <Button\r\n                        className=\"btn\"\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        startIcon={<KeyboardBackspaceIcon />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </Link>\r\n            </Toolbar>\r\n            <Container\r\n                display=\"flex\"\r\n                component=\"main\"\r\n                width=\"70%\"\r\n                style={{ paddingTop: 0 }}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Typography style={{ color: \"white\", marginBottom: \"1%\" }} component=\"h5\" variant=\"h5\">\r\n                        STAGES OF THE ITINERARY \"{props.clickedItinName}\"\r\n                    </Typography>\r\n                    <Grid container direction=\"row\" spacing=\"2\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Button\r\n                                className=\"btn\"\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                startIcon={<AddIcon />}\r\n                                onClick={handleClickAdd}\r\n                            >\r\n                                ADD STAGE\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                style={{background: \"linear-gradient(to right, #5c5c5c, #ffffff)\"}}\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                startIcon={<UpdateIcon />}\r\n                                onClick={handleUpdate}\r\n                            >\r\n                                UPDATE DATA\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                </div>\r\n\r\n                {loading ?\r\n                    <div className={classes.root}>\r\n                        <CircularProgress style={{ color: \"white\" }} />\r\n                    </div> :\r\n                    renderCards()\r\n                }\r\n\r\n            </Container>\r\n\r\n            <Dialog open={openPopUp} onClose={handleCancelDel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">DELETE STAGE</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelDel} style={{ color: \"black\" }}>\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <div>\r\n                        <Button\r\n                            onClick={handleDelete}\r\n                            variant=\"contained\"\r\n                            style={{ color: \"black\", borderColor: \"black\", background: \"red\" }}\r\n                        >\r\n                            <p>YES</p>\r\n                        </Button>\r\n                    </div>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={open} onClose={handleCancelAdd} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">ADD A NEW STAGE</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{ color: \"black\" }}>\r\n                        Insert the name of the city\r\n                    </DialogContentText>\r\n                    <CssTextField\r\n                        autoFocus\r\n                        style={{ width: \"100%\" }}\r\n                        id=\"outlined-basic\"\r\n                        label=\"City\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        name=\"cityName\"\r\n                        InputProps={{\r\n                            className: classes.multilineColor,\r\n                            classes: {\r\n                                root: classes.cssOutlinedInput,\r\n                                notchedOutline: classes.notchedOutline\r\n                            }\r\n\r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes: {\r\n                                root: classes.cssLabel,\r\n                            },\r\n                        }}\r\n                    />\r\n                    <DialogContentText style={{ color: \"black\", marginTop:\"10px\", marginBottom: \"0px\" }}>\r\n                        Pick a date\r\n                    </DialogContentText>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            style={{color: \"black\"}}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelAdd} style={{ color: \"red\" }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleDone}\r\n                        variant=\"outlined\"\r\n                        style={{ color: \"black\", borderColor: \"black\" }}\r\n                    >\r\n                        <p>Done</p>\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItineraryInfo","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\SignIn.js",["119","120","121","122","123","124","125","126","127","128","129"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport \"../Css/search.css\"\r\nimport { TextField, InputBase, withTheme, ThemeProvider, withStyles } from '@material-ui/core';\r\nimport { createMuiTheme } from \"@material-ui/core/styles\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from \"@material-ui/core/Card\"\r\nimport { grey } from '@material-ui/core/colors';\r\nimport Itinerary from \"./Itinerary\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CssTextField from \"./CssTextField\"\r\n\r\n\r\n// STYLING\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    palette: {\r\n      primary: {\r\n        main: grey,\r\n        mainGradient: \"linear-gradient(to right, #ffffff, #5c5c5c)\"\r\n      }\r\n    }\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    background: \"linear-gradient(to right, #ffffff,#5c5c5c)\"\r\n  },\r\n  cssLabel: {\r\n    color: \"white\"\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `${theme.palette.primary.main} !important`,\r\n    }\r\n  },\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: 'grey !important'\r\n  },\r\n  multilineColor: {\r\n    color: \"white\"\r\n  },\r\n\r\n}));\r\n\r\n// COMPONENT\r\nfunction SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  // STATO\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLogged, setLogged] = useState(props.logged);\r\n\r\n  // GESTIONE EVENTI E \"COMPONENT DID MOUNT\"\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  function handleChangeMail(event) {\r\n    const { value } = event.target\r\n    setEmail(value);\r\n  }\r\n\r\n  function handleChangePsw(event) {\r\n    const { value } = event.target\r\n    setPassword(value);\r\n  }\r\n\r\n  //console.log(\"SignIn : \" + isLogged)\r\n\r\n  async function getIdFromToken(token){\r\n    await fetch(\"/api/provaVerifica\", {\r\n      headers: {\r\n        'auth-token' : token\r\n    },\r\n      method : \"GET\"\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then(function(data) {\r\n        if (data.error != null) {\r\n          alert(\"ERROR,\" + \"\\n\" + data.error);\r\n          console.log(\"ERROR\");\r\n          return false;\r\n        } else { \r\n          props.setLogged(data._id);\r\n          localStorage.setItem('user-id', data._id);\r\n          return true\r\n        } \r\n      })\r\n        .catch(error => console.error(error));\r\n      return false;\r\n  }\r\n\r\n  async function handleClick() {\r\n    await fetch('/users/login', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then(function (data) {\r\n        console.log(data);\r\n        if (data.error != null) {\r\n          alert(data.error);\r\n          console.log(\"ERROR\");\r\n          return false;\r\n        } else {\r\n          //console.log(data.token);\r\n          setLogged(true)\r\n          localStorage.setItem('auth-token', data.token);\r\n          getIdFromToken(data.token)\r\n          return true;\r\n        }\r\n      })\r\n      .catch(error => console.error(error));\r\n    return false;\r\n  }\r\n\r\n  // GRAFICA\r\n  return (\r\n    <div>\r\n      {isLogged ? <Redirect to={\"/\"} /> : \r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ paddingTop: 100 }}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n\r\n          <Typography style={{ color: \"white\" }} component=\"h1\" variant=\"h5\">\r\n            SIGN IN\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <CssTextField\r\n              onChange={handleChangeMail}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                },\r\n              }}\r\n            />\r\n            <CssTextField\r\n              onChange={handleChangePsw}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                },\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              className={classes.submit}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={handleClick}\r\n            >\r\n              SIGN IN\r\n            </Button> \r\n            \r\n            <Grid container>\r\n              <Grid\r\n                item\r\n                style={{ margin: \"auto\" }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{ textTransform: \"none\", borderColor: \"#5c5c5c\" }}\r\n                >\r\n                  <Link\r\n                    style={{ color: \"white\" }}\r\n                    to={\"/SignUp\"}\r\n                    variant=\"body2\"\r\n                  >\r\n                    Don't have an account? Sign Up\r\n                        </Link>\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SignIn","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\SignUp.js",["130","131","132","133","134","135","136","137","138","139"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport \"../Css/search.css\"\r\nimport { TextField, InputBase, withTheme, ThemeProvider, withStyles } from '@material-ui/core';\r\nimport { createMuiTheme } from \"@material-ui/core/styles\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Card from \"@material-ui/core/Card\"\r\nimport { grey } from '@material-ui/core/colors';\r\nimport Itinerary from \"./Itinerary\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CssTextField from \"./CssTextField\"\r\n\r\n// STYLING\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    palette: {\r\n      primary: {\r\n        main: grey,\r\n        mainGradient: \"linear-gradient(to right, #ffffff, #5c5c5c)\"\r\n      }\r\n    }\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 0, 2),\r\n    background: \"linear-gradient(to right, #ffffff,#5c5c5c)\"\r\n  },\r\n  cssLabel: {\r\n    color: \"white\"\r\n  },\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `${theme.palette.primary.main} !important`,\r\n    }\r\n  },\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: 'grey !important'\r\n  },\r\n  multilineColor: {\r\n    color: \"white\"\r\n  },\r\n\r\n}));\r\n\r\n// COMPONENT\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n\r\n  // STATO\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confPass, setConfPass] = useState(\"\");\r\n  const [isRegistered, setRegistered] = useState(false);\r\n\r\n  // GESTIONE EVENTI E \"COMPONENT DID MOUNT\"\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  function handleChangeMail(event) {\r\n    const { value } = event.target\r\n    setEmail(value);\r\n  }\r\n\r\n  function handleChangePsw(event) {\r\n    const { value } = event.target\r\n    setPassword(value);\r\n  }\r\n\r\n  function handleChangeConfPass(event){\r\n    const { value } = event.target\r\n    setConfPass(value);\r\n  }\r\n\r\n  async function handleClick() {\r\n    if(password.localeCompare(confPass) !== 0 || email.localeCompare(\"\")===0 || password.localeCompare(\"\")===0){\r\n\r\n      if(password.localeCompare(confPass) !== 0 )\r\n        window.alert(\"Password does not match!\");\r\n\r\n      if (email.localeCompare(\"\")===0) \r\n        window.alert(\"E-mail field must not be empty!\"); \r\n\r\n      if (password.localeCompare(\"\")===0) \r\n        window.alert(\"Password field must not be empty!\");\r\n    } else {\r\n\r\n      await fetch('/users', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          \"email\": email,\r\n          \"password\": password\r\n        })\r\n      }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n          console.log(data);\r\n          if (data.error != null) {\r\n            window.alert(data.error);\r\n            console.log(\"ERROR\");\r\n            return false;\r\n          } else {\r\n            // console.log(data);\r\n            setRegistered(true);\r\n            return true;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          window.alert(error)\r\n          console.error(error)\r\n        });\r\n      return false;\r\n      //console.log(\"the email is: \"+_email);\r\n      //console.log(\"you clicked sign up\");\r\n    }\r\n\r\n}\r\n\r\n\r\n  // GRAFICA\r\n  return (\r\n    <div>\r\n      {isRegistered ? <Redirect to={\"/\"} /> : \r\n      <Container component=\"main\" maxWidth=\"xs\" style={{ paddingTop: 85 }}>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n\r\n          <Typography style={{ color: \"white\" }} component=\"h1\" variant=\"h5\">\r\n            SIGN UP\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <CssTextField\r\n              onChange={handleChangeMail}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                },\r\n              }}\r\n            />\r\n            <CssTextField\r\n              onChange={handleChangePsw}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                },\r\n              }}\r\n            />\r\n            <CssTextField\r\n              onChange={handleChangeConfPass}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"confirm password\"\r\n              label=\"Confirm password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n                classes: {\r\n                  root: classes.cssOutlinedInput,\r\n                  notchedOutline: classes.notchedOutline\r\n                }\r\n              }}\r\n              InputLabelProps={{\r\n                classes: {\r\n                  root: classes.cssLabel,\r\n                },\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              className={classes.submit}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={handleClick}\r\n            >\r\n              SIGN UP\r\n            </Button> \r\n            \r\n            <Grid container>\r\n              <Grid\r\n                item\r\n                style={{ margin: \"auto\" }}\r\n              >\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  style={{ textTransform: \"none\", borderColor: \"#5c5c5c\" }}\r\n                >\r\n                  <Link\r\n                    style={{ color: \"white\" }}\r\n                    to={\"/login\"}\r\n                    variant=\"body2\"\r\n                  >\r\n                    Already have an account? Sign In\r\n                        </Link>\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SignUp;","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Container.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useEffect, useState } from \"react\"\r\nimport Card from \"./Card\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\nimport SunglassesIcon from 'mdi-react/SunglassesIcon'\r\nimport CurrentCard from \"./CurrentCard\"\r\n\r\n\r\nfunction Container(props) {\r\n\r\n    //console.log(props.dataToPass)\r\n\r\n    const [incomingData, setData] = useState(props.dataToPass);\r\n    const [incomingSecondData, setSecondData] = useState(props.dataToPassTwo)\r\n\r\n    const paperstyles = {\r\n        backgroundColor : \"rgba(255,255,255,0.45)\",\r\n        margin : \"auto\"\r\n    }\r\n\r\n    const textStyle = {\r\n        color : \"white\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant = \"h5\" style={{color : \"white\" , marginTop : \"1%\"}}>\r\n                    Current\r\n            </Typography>\r\n            <Divider style = {{background : \"rgba(255,255,255,0.15)\", marginLeft : \"30%\", marginRight: \"30%\", marginBottom : \"0.5%\"}}/> \r\n            \r\n            <CurrentCard incomingData = {incomingData} />\r\n            \r\n            <Typography variant = \"h5\" style={{color : \"white\", marginTop : \"1%\"}}>\r\n                Forecast\r\n            </Typography>\r\n            <Divider style = {{background : \"rgba(255,255,255,0.15)\", marginLeft : \"13%\", marginRight: \"13%\", marginBottom : \"0.5%\"}}/>\r\n\r\n            <Box\r\n                component=\"div\"\r\n                display=\"flex\"\r\n                mx={0}\r\n                mt={0}\r\n                pt={0}\r\n                pb={0}\r\n            >\r\n                <Card num=\"0\" data = {incomingSecondData} />\r\n                <Card num=\"1\" data = {incomingSecondData}/>\r\n                <Card num=\"2\" data = {incomingSecondData}/>\r\n                <Card num=\"3\" data = {incomingSecondData}/>\r\n                <Card num=\"4\" data = {incomingSecondData}/>\r\n            </Box>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Container","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Form.js",["155","156","157","158","159","160","161"],"// import { type } from \"os\";\r\nimport React, { useEffect, useState } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport Search from \"@material-ui/icons/Search\"\r\nimport Container from \"./Container\"\r\nimport EmptyContainer from \"./EmptyContainer\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CssTextField from \"./CssTextField\"\r\n\r\n// STYLING\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cssLabel: {\r\n        color: \"white\"\r\n    },\r\n\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'grey !important'\r\n    },\r\n\r\n    multilineColor: {\r\n        color: \"white\"\r\n    },\r\n\r\n}));\r\n\r\n\r\nfunction Form() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const styles = {\r\n        width: 700,\r\n        marginTop: 35\r\n    }\r\n\r\n    const [research, setResearch] = useState(\"\")\r\n    const [researchBefore, setResearchBefore] = useState(\"\")\r\n    const [data, setData] = useState(Object)\r\n    const [dataTwo, setSecondData] = useState(Object)\r\n    const [loading, setLoading] = useState(false)\r\n    const [buttonClicked, setButtonClicked] = useState(false)\r\n\r\n    async function handleClick() {\r\n        console.log(localStorage.getItem('user-id'));\r\n        if (research.localeCompare(\"\") != 0 && research.localeCompare(researchBefore) != 0) {\r\n            setResearchBefore(research)\r\n            setLoading(true)\r\n            setButtonClicked(true)\r\n\r\n            const searchUrl = \"./meteos/\" + research;\r\n\r\n            await fetch(searchUrl)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    var array = new Array();\r\n                    var jsonCurrent={\r\n                        icon: \"http://openweathermap.org/img/wn/\" + response.current.weather[0].icon + \"@2x.png\",\r\n                        temp_Max: response.daily[0].temp.max,\r\n                        temp_Min: response.daily[0].temp.min,\r\n                        date: response.current.dt * 1000,\r\n                        cityName: response.timezone,\r\n                        temp: response.current.temp,\r\n                        humidity: response.current.humidity,\r\n                        wind_speed: response.current.wind_speed,\r\n                        deg: response.current.wind_deg,\r\n                        main: response.current.weather[0].main,\r\n                        feels_like: response.current.feels_like,\r\n                        uvi: response.current.uvi\r\n                    }\r\n                    //console.log(jsonCurrent.temp);\r\n                    for(var i=1; i<6; i++){\r\n                        var jsonToPass={\r\n                            icon: \"http://openweathermap.org/img/wn/\" + response.daily[i].weather[0].icon + \"@2x.png\",\r\n                            temp_Max: response.daily[i].temp.max,\r\n                            temp_Min: response.daily[i].temp.min,\r\n                            date: response.daily[i].dt * 1000,\r\n                            cityName: response.timezone,\r\n                            temp: response.daily[i].temp.day,\r\n                            humidity: response.daily[i].humidity,\r\n                            wind_speed: response.daily[i].wind_speed,\r\n                            deg: response.daily[i].wind_deg,\r\n                            main: response.daily[i].weather[0].main\r\n                        }\r\n                        array.push(jsonToPass);\r\n                    }\r\n                    console.log(array)\r\n                    setData(jsonCurrent)\r\n                    setSecondData(array)\r\n                    setLoading(false)\r\n                });\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        var { value } = event.target\r\n        setResearch(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <InputLabel></InputLabel>\r\n            {/*<h2 class=\"title\">Cerca Località: </h2>*/}\r\n            <br />\r\n            <form className=\"search__part\">\r\n                <CssTextField\r\n                    style={styles}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Search City\"\r\n                    placeholder=\"London, New York, Tokyo ...\"\r\n                    variant=\"outlined\"\r\n                    name=\"research\"\r\n                    onChange={handleChange}\r\n                    value={research}\r\n                    InputProps={{\r\n                        className: classes.multilineColor,\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Search style={{color: \"white\"}} onClick={handleClick} />\r\n                            </InputAdornment>\r\n                        ),\r\n                        classes: {\r\n                            root: classes.cssOutlinedInput,\r\n                            notchedOutline: classes.notchedOutline\r\n                        }\r\n\r\n                    }}\r\n                    InputLabelProps={{\r\n                        classes: {\r\n                            root: classes.cssLabel,\r\n                        },\r\n                    }}\r\n                />\r\n\r\n                {/*<input name=\"research\" type=\"text\" id=\"searchbar\" value={this.state.research} onChange={this.handleChange} class=\"form-control\" placeholder=\"London, New York, Tokyo...\" />*/}\r\n                <br />\r\n                <br />\r\n\r\n                <div style = {{position : \"relative\"}}>\r\n                    <Button\r\n                        className=\"btn\"\r\n                        variant=\"contained\"\r\n                        onClick={handleClick}\r\n                        size=\"large\"\r\n                        startIcon={<Search />}\r\n                        disabled={loading}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    {loading && <CircularProgress size={24} style={{\r\n                        color: \"white\",\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        marginTop: -12,\r\n                        marginLeft: -12,\r\n                    }} />}\r\n                </div>\r\n\r\n\r\n                {(!loading && buttonClicked) ?\r\n                            <Container dataToPass = {data}\r\n                                dataToPassTwo = {dataTwo}\r\n                            />\r\n                        :\r\n                            null\r\n                }\r\n\r\n                {/*<button type=\"button\" class=\"btn\" id=\"forecast\" onClick={this.handleClick}><i class=\"fa fa-search\"></i> Search </button>*/}\r\n            </form>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Form","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\ItineraryList.js",["162","163","164"],"import { makeStyles, Typography } from \"@material-ui/core\"\r\nimport Container from '@material-ui/core/Container';\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@material-ui/core/Box';\r\n// import List from '@material-ui/core/List';\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { FixedSizeList } from 'react-window'\r\nimport MapMarkerPathIcon from 'mdi-react/MapMarkerPathIcon'\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InformationOutlineIcon from \"mdi-react/InformationOutlineIcon\"\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport CssTextField from \"./CssTextField\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    cssLabel: {\r\n        color: \"black\"\r\n    },\r\n\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'black !important'\r\n    },\r\n\r\n    multilineColor: {\r\n        color: \"black\"\r\n    },\r\n}));\r\n\r\n//                <Typography style={{ color: \"white\", fontSize: \"80%\" }} component=\"h1\" variant=\"h7\">\r\n//                    click on the info button to get the informations about an itinerary\r\n//                </Typography>\r\n\r\nfunction ItineraryList(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [added, setAdded] = useState(false);\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [delClickedItin, setDelClickedItin] = useState(\"\");\r\n    // ------------------------------------------------------------\r\n    const [itinData, setItinData] = useState([])\r\n    const [done, setDone] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // COMPONENT DID MOUNT\r\n    useEffect(() => {\r\n        fetching();\r\n        console.log(\"The signed-in user's id: \" + props.user);\r\n        // renderRow()\r\n    }, [])\r\n\r\n    async function fetching() {\r\n        setLoading(true);\r\n        await fetch('/itineraries/' + props.user, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n            .then(function (data) {\r\n                console.log(data)\r\n                setItinData(data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => console.error(error))\r\n\r\n    }\r\n\r\n    \r\n    // HANDLERS\r\n    \r\n    async function handleDelete(event) {\r\n        \r\n        await fetch('/itineraries', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'DELETE', \r\n            body: JSON.stringify({\r\n                \"user_id\": props.user,\r\n                \"itinerary_id\": delClickedItin\r\n            })\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            console.log(data)\r\n        })\r\n        .catch(error => console.error(error));\r\n        \r\n        setOpenPopUp(false);\r\n        fetching();\r\n        \r\n    }\r\n    \r\n    \r\n    async function handleInfo(event) {\r\n        \r\n        props.setClickedItinId(event.target.id);\r\n        props.setClickedItinName(event.target.getAttribute(\"name\"))\r\n        \r\n        await fetch('/meteoComponents/' + props.user + \"&\" + event.target.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            //(console.log(data)\r\n            props.setClickedItinMeteos(data);\r\n            // setItinData(data);\r\n        })\r\n        .catch(error => console.error(error))\r\n        \r\n        // setOpen(true);\r\n        setDone(true);\r\n        \r\n    };\r\n    \r\n    //-----------------------------------------------------------------\r\n    \r\n    async function addItinerary(){\r\n        await fetch('/itineraries' , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"itinerary_name\": name,\r\n                \"user_id\": props.user\r\n            })\r\n        }).then(response => response.json())\r\n        .then(function (data) {\r\n            console.log(data)\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            } else {\r\n                setAdded(true);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n\r\n        setName(\"\");\r\n        fetching();\r\n    }\r\n    \r\n    function handleClick() {\r\n        setOpen(true);\r\n    }\r\n    \r\n    function handleCancel() {\r\n        setOpen(false);\r\n    }\r\n    \r\n    function handleCancelDel() {\r\n        setOpenPopUp(false);\r\n    }\r\n    \r\n    function handleClickDel(event){\r\n        setDelClickedItin(event.target.id)\r\n        console.log(event.target.id)\r\n        setOpenPopUp(true);\r\n    }\r\n\r\n    function handleDone() {\r\n        setOpen(false);\r\n        addItinerary();\r\n    }\r\n    \r\n    function handleChange(event){\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    \r\n    // RENDER DELLE RIGHE\r\n    function renderRow() {\r\n        return (\r\n            <div>\r\n                {itinData.map(item => (\r\n                    <div\r\n                        key={item._id}\r\n                        className=\"itineraryDiv\"\r\n                    >\r\n                        <ListItem\r\n                            style={{ \r\n                                color: \"white\", \r\n                                background: \"linear-gradient(to right, rgba(255,255,255,0.8),rgba(112,112,112,0.7))\" , \r\n                                borderRadius : \"15px\"\r\n                            }}\r\n                        >\r\n                            <ListItemText style={{ pointerEvents: \"none\", color: \"black\" }} >\r\n                                <h2> {item.name} </h2>\r\n                            </ListItemText>\r\n\r\n                            <div\r\n                                onClick={handleInfo}\r\n                                id={item._id}\r\n                                name={item.name}\r\n                            >\r\n                                <IconButton  style={{ pointerEvents: \"none\" }}>\r\n                                    <InformationOutlineIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div\r\n                                onClick={handleClickDel}\r\n                                id={item._id}\r\n                                name={item.name}\r\n                            >\r\n                                <IconButton style={{ pointerEvents: \"none\" }} variant=\"outlined\">\r\n                                    <DeleteIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                        </ListItem>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    // RENDERING\r\n    return (\r\n        <div>\r\n            {done ?\r\n                <Redirect to={\"/myitinerary\"} /> :\r\n                \r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ paddingTop: 0 }}>\r\n\r\n                    <div className={classes.paper}>\r\n                        <MapMarkerPathIcon size={45} style={{ color: \"white\", marginBottom: \"8px\" }} />\r\n                        <Typography \r\n                            style={{ color: \"white\", marginBottom: \"3%\" }} \r\n                            component=\"h5\" \r\n                            variant=\"h5\"\r\n                        >\r\n                            YOUR ITINERARIES\r\n                        </Typography>\r\n                        <br />\r\n                    </div>\r\n\r\n                    <Box\r\n                        component=\"div\"\r\n                        border={2}\r\n                        mx={0}\r\n                        mt={5}\r\n                        pt={1}\r\n                        pb={1}\r\n                        boxShadow={10}\r\n                        style={{ textAlign: \"center\", borderColor: \"rgba(0,0,0,0.3)\", color: \"white\", background: \"rgba(0,0,0,0.2)\" }}\r\n                        >\r\n                        {loading ?\r\n                            <div className={classes.root}>\r\n                                <CircularProgress style={{ color: \"white\" }} />\r\n                            </div> :\r\n                            <FixedSizeList\r\n                                height={270}\r\n                                width={300}\r\n                                itemSize={600}\r\n                                itemCount={1}\r\n                                style={{ position: \"relative\", margin: \"auto\" }}\r\n                            >\r\n                                {renderRow}\r\n                            </FixedSizeList>\r\n                        }\r\n                    </Box>\r\n\r\n                    <div className={classes.button}>\r\n                        <Button\r\n                            className=\"btn\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={handleClick}\r\n                            style={{color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth:\"1px\"}}\r\n                        >\r\n                            Add itinerary\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            }\r\n\r\n                        \r\n            <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">ADD A NEW ITINERARY</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{color: \"black\"}}>\r\n                        Insert the name of the new itinerary\r\n                    </DialogContentText>\r\n                    <CssTextField\r\n                        autoFocus\r\n                        style={{width: \"100%\" }}\r\n                        id=\"outlined-basic\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        name=\"research\"\r\n                        InputProps={{\r\n                            className: classes.multilineColor,\r\n                            classes: {\r\n                                root: classes.cssOutlinedInput,\r\n                                notchedOutline: classes.notchedOutline\r\n                            }\r\n    \r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes: {\r\n                                root: classes.cssLabel,\r\n                            },\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancel} style={{color: \"red\"}}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button \r\n                        onClick={handleDone} \r\n                        variant=\"outlined\"\r\n                        style={{color: \"black\", borderColor: \"black\"}}\r\n                    >\r\n                        <p>Done</p>\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openPopUp} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">DELETE ITINERARY</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelDel} style={{color: \"black\"}}>\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <div>\r\n                        <Button \r\n                            onClick={handleDelete} \r\n                            variant=\"contained\"\r\n                            style={{color: \"black\", borderColor: \"black\", background:\"red\"}}\r\n                            >\r\n                            <p>YES</p>\r\n                        </Button>\r\n                    </div>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ItineraryList","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\MeteoCard.js",["165"],"import React, { useState } from \"react\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\nimport DeleteIcon from 'mdi-react/DeleteIcon'\r\n\r\n\r\nfunction MeteoCard(props) {\r\n\r\n    const date = new Date(props.item.date * 1000);\r\n    const updateDate = new Date(props.item.dataUpdatedOn * 1000)\r\n    const [clicked] = useState(props.item._id);\r\n    const [availableDate] = useState(subtractDays(date));\r\n\r\n    //    console.log(props.item.date)\r\n    //    console.log(availableDate)\r\n\r\n    function subtractDays(data) {\r\n        var result = new Date(data);\r\n        result.setDate(result.getDate() - 7);\r\n        return result;\r\n    }\r\n\r\n\r\n    function round(value, precision) {\r\n        var multiplier = Math.pow(10, precision || 0);\r\n        return Math.round(value * multiplier) / multiplier;\r\n    }\r\n\r\n\r\n    function toTextualDescription(degree) {\r\n        if (degree > 337.5)\r\n            return 'N'\r\n        if (degree > 292.5)\r\n            return 'NW'\r\n        if (degree > 247.5)\r\n            return 'W'\r\n        if (degree > 202.5)\r\n            return 'SW'\r\n        if (degree > 157.5)\r\n            return 'S'\r\n        if (degree > 122.5)\r\n            return 'SE'\r\n        if (degree > 67.5)\r\n            return 'E'\r\n        if (degree > 22.5)\r\n            return 'NE'\r\n        return 'N';\r\n    }\r\n\r\n\r\n\r\n\r\n    function handleClickDel(event) {\r\n        // console.log(clicked)\r\n        props.setClickedMeteoComp(clicked)\r\n        props.handleClickDel();\r\n    }\r\n\r\n    return (\r\n        <Grid item>\r\n            <Box\r\n                mt=\"auto\"\r\n                mr=\"auto\"\r\n                mb=\"auto\"\r\n                ml=\"auto\"\r\n                width={250}\r\n                minHeight={344}\r\n                borderRadius={16}\r\n                boxShadow=\"20\"\r\n                style={{\r\n                    backgroundColor: \"rgba(255,255,255,0.5)\"\r\n                }}\r\n            >\r\n\r\n                {props.item.available ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item>\r\n                            <h1 style={{ color: \"Black\", fontSize: \"27px\", marginTop: \"3px\", marginBottom: \"3px\", textAlign: \"center\" }}>\r\n                                {props.item.cityName}\r\n                            </h1>\r\n                            <h3 style={{ textAlign: \"center\" }}>\r\n                                {date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()}\r\n                            </h3>\r\n                            <img\r\n                                src={\"http://openweathermap.org/img/wn/\" + props.item.icon + \".png\"}\r\n                                style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"block\" }}>\r\n\r\n                            </img>\r\n                            <h2 style={{ color: \"Black\", fontSize: \"25px\", textAlign: \"center\" }}>\r\n                                {props.item.main}\r\n                            </h2>\r\n                        </Grid>\r\n                        <Divider orientation=\"horizontal\" flexItem />\r\n                        <Grid item>\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                alignItems=\"center\"\r\n                                spacing={5}\r\n                            >\r\n                                <Grid item>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        <Grid item>\r\n                                            <ThermometerIcon size={30} />\r\n                                            <h3>{round(props.item.temp, 1) + \"°\"}</h3>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                                                <Grid item >\r\n                                                    <p style={{ fontWeight: \"bold\", color: \"#008fd6\" }}>\r\n                                                        {round(props.item.temp_Min, 1) + \"°\"}\r\n                                                    </p>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <p style={{ fontWeight: \"bold\", color: \"rgba(140,0,0,0.8\" }}>\r\n                                                        {round(props.item.temp_Max, 1) + \"°\"}\r\n                                                    </p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider\r\n                                    orientation=\"vertical\"\r\n                                    style={{ marginBottom: \"11%\", marginTop: \"11%\" }}\r\n                                    flexItem\r\n                                />\r\n                                <Grid item>\r\n                                    <OpacityIcon style={{ fontSize: \"30px\" }} />\r\n                                    <h3>{props.item.humidity + \"%\"}</h3>\r\n                                </Grid>\r\n                                <Divider\r\n                                    orientation=\"vertical\"\r\n                                    style={{ marginBottom: \"11%\", marginTop: \"11%\" }}\r\n                                    flexItem\r\n                                />\r\n                                <Grid item>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        alignItems=\"center\"\r\n                                        spacing={1}\r\n                                    >\r\n                                        <Grid item>\r\n                                            <div>\r\n                                                <WeatherWindyIcon size={30} />\r\n                                                <h3>{round(props.item.wind_speed, 1)}</h3>\r\n                                                <h6>km/h</h6>\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            {toTextualDescription(props.item.wind_deg)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: \"8px\" }}\r\n                        >\r\n                            <Grid item>\r\n                                <h6> Updated on: </h6>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <h6> {updateDate.getDate() + \"/\" + (updateDate.getMonth() + 1) + \"/\" + updateDate.getFullYear()} </h6>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item style={{ marginTop: \"-7px\" }}>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <IconButton\r\n                                    onClick={handleClickDel}\r\n                                >\r\n                                    <DeleteIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        spacing={1}\r\n                    >\r\n                        <Grid item>\r\n\r\n                            <h1 style={{ color: \"Black\", fontSize: \"27px\", marginTop: \"3px\", marginBottom: \"3px\", textAlign: \"center\" }}>\r\n                                {props.item.cityName}\r\n                            </h1>\r\n\r\n                            <h3 style={{ textAlign: \"center\", marginBottom: \"100%\" }}>\r\n                                {date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()}\r\n                            </h3>\r\n\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <h1 style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\r\n                                DATA WILL BE AVAILABLE ON:\r\n                                    {availableDate.getDate() + \"/\" +\r\n                                    (availableDate.getMonth() + 1) + \"/\" +\r\n                                    availableDate.getFullYear()}\r\n                            </h1>\r\n                        </Grid>\r\n\r\n                        <Grid item style={{ marginTop: \"28%\" }}>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <IconButton\r\n                                    onClick={handleClickDel}\r\n                                >\r\n                                    <DeleteIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                }\r\n            </Box>\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default MeteoCard\r\n\r\n\r\n","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\CurrentCard.js",["166","167","168"],"import React, { useEffect, useState } from \"react\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\nimport SunglassesIcon from 'mdi-react/SunglassesIcon'\r\n\r\nfunction CurrentCard(props) {\r\n\r\n    function round(value, precision) {\r\n        var multiplier = Math.pow(10, precision || 0);\r\n        return Math.round(value * multiplier) / multiplier;\r\n    }\r\n\r\n    function  toTextualDescription(degree){\r\n        if (degree>337.5) \r\n            return 'N'\r\n        if (degree>292.5) \r\n            return 'NW'\r\n        if (degree>247.5) \r\n            return 'W'\r\n        if (degree>202.5) \r\n            return 'SW'\r\n        if (degree>157.5) \r\n            return 'S'\r\n        if (degree>122.5) \r\n            return 'SE'\r\n        if (degree>67.5) \r\n            return 'E'\r\n        if (degree>22.5) \r\n            return 'NE'\r\n        return 'N';\r\n    }\r\n\r\n    return(\r\n        <div>     \r\n        \r\n            <Box\r\n                mt=\"auto\"\r\n                mr=\"auto\"\r\n                mb=\"auto\"\r\n                ml=\"auto\"\r\n                width={350}\r\n                height={280}\r\n                borderRadius={16}\r\n                boxShadow=\"20\"\r\n                style = {{\r\n                    backgroundColor : \"rgba(255,255,255,0.5)\"\r\n                }}\r\n            >\r\n                <Grid container direction=\"column\" justify= \"center\" alignItems = \"center\">\r\n                    <Grid item style = {{padding : 0}}>\r\n                        <img src={props.incomingData.icon} />\r\n                        <h2 style = {{color : \"Black\", fontSize : \"30px\"}}>{props.incomingData.main}</h2>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container direction = \"row\" justify = \"center\" alignItems = \"center\" spacing = {6} style = {{marginTop : 0}}>\r\n                            <Grid item>\r\n                                <Grid item >\r\n                                    <Grid container direction = \"column\" alignItems = \"center\" spacing = {1}>\r\n                                        <Grid item>\r\n                                            <ThermometerIcon size = {30}/>\r\n                                            <h3>{round(props.incomingData.temp,1) + \"°\"}</h3>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#008fd6\"}}>\r\n                                                    {round(props.incomingData.temp_Min,1) + \"°\"}\r\n                                                </p>\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#b30000\"}}>\r\n                                                    {round(props.incomingData.temp_Max,1) + \"°\"}\r\n                                                </p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <OpacityIcon style = {{ fontSize : \"30px\"}}/>\r\n                                <h3>{props.incomingData.humidity + \"%\"}</h3>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <Grid container direction = \"column\" alignItems = \"center\" spacing = {1} >\r\n                                    <Grid item>\r\n                                            <WeatherWindyIcon size = {30} />\r\n                                            <h3>{round(props.incomingData.wind_speed,1)}</h3>\r\n                                            <h6>km/h</h6>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        {toTextualDescription(props.incomingData.wind_deg)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <SunglassesIcon size = {30} />\r\n                                <br/>\r\n                                <h3>{props.incomingData.uvi}</h3>\r\n                                <p style={{fontWeight : \"bold\"}}>UV</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CurrentCard",["169","170"],"C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\Card.js",["171","172","173","174","175"],"import React, { useState, useEffect } from \"react\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\n\r\nfunction Card(props) {\r\n\r\n    \r\n    const [data, setData] = useState(props.data)\r\n    const [index,setIndex] = useState(props.num)\r\n\r\n\r\n    function handleClick(){\r\n        console.log(data)\r\n    }\r\n\r\n    function  toTextualDescription(degree){\r\n        if (degree>337.5) \r\n            return 'N'\r\n        if (degree>292.5) \r\n            return 'NW'\r\n        if (degree>247.5) \r\n            return 'W'\r\n        if (degree>202.5) \r\n            return 'SW'\r\n        if (degree>157.5) \r\n            return 'S'\r\n        if (degree>122.5) \r\n            return 'SE'\r\n        if (degree>67.5) \r\n            return 'E'\r\n        if (degree>22.5) \r\n            return 'NE'\r\n        return 'N';\r\n    }\r\n\r\n\r\n    function round(value, precision) {\r\n        var multiplier = Math.pow(10, precision || 0);\r\n        return Math.round(value * multiplier) / multiplier;\r\n    }\r\n\r\n\r\n    //console.log(data);\r\n    console.log(data[index].date);\r\n    const date = new Date(data[index].date);\r\n\r\n\r\n    return (\r\n        <Box\r\n            border={0}\r\n            mt=\"auto\"\r\n            mr=\"auto\"\r\n            mb=\"auto\"\r\n            ml=\"auto\"\r\n            width={250}\r\n            height={300}\r\n            borderRadius={16}\r\n            boxShadow=\"10\"\r\n            onClick={handleClick}\r\n        >\r\n            <Box\r\n                component=\"div\"\r\n                width=\"100%\"\r\n                className=\"card__inner\"\r\n            >\r\n                <Box\r\n                    component=\"div\"\r\n                    className=\"card__face card__face--front\"\r\n                    style = {{\r\n                        backgroundColor : \"rgba(255,255,255,0.35)\"\r\n                    }}\r\n                >\r\n                    <Grid container direction = \"column\" alignItems = \"center\" justify = \"center\" spacing = {2}>\r\n                        <Grid item>\r\n                            <h3> {date.getDate() + \"/\" + (date.getMonth()+1) + \"/\" + date.getFullYear()} </h3>\r\n                            <img src={data[index].icon} id=\"imm_uno\" alt=\"Immagine\" className=\"image__icon\" />\r\n                            <h2 style = {{color : \"Black\", fontSize : \"30px\"}}>{data[index].main}</h2>\r\n                        </Grid>\r\n                        <Divider orientation=\"horizontal\" flexItem/>\r\n                        <Grid item>\r\n                            <Grid container direction = \"row\" alignItems = \"center\" spacing = {5}>\r\n                                <Grid item>\r\n                                    <Grid container direction = \"column\" alignItems = \"center\" spacing = {1}>\r\n                                        <Grid item>\r\n                                            <ThermometerIcon size = {30}/>\r\n                                            <h3>{round(data[index].temp,1) + \"°\"}</h3>\r\n                                        </Grid>\r\n                                        <Grid item > \r\n                                            <p style = {{fontWeight : \"bold\", color:\"#008fd6\"}}>\r\n                                                {round(data[index].temp_Min,1) + \"°\"}\r\n                                            </p>\r\n                                            <p style = {{fontWeight : \"bold\", color:\"rgba(140,0,0,0.8\"}}>\r\n                                                {round(data[index].temp_Max,1) + \"°\"}\r\n                                            </p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                                <Grid item>\r\n                                    <OpacityIcon style = {{ fontSize : \"30px\"}}/>\r\n                                    <h3>{data[index].humidity + \"%\"}</h3>\r\n                                </Grid>\r\n                                <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                                <Grid item>\r\n                                    <Grid container direction = \"column\" alignItems = \"center\" spacing = {1} >\r\n                                        <Grid item>\r\n                                            <div>\r\n                                                <WeatherWindyIcon size = {30} />\r\n                                                <h3>{round(data[index].wind_speed,1)}</h3>\r\n                                                <h6>km/h</h6>\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            {toTextualDescription(data[index].wind_deg)}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Card","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\CssTextField.js",["176"],"import React from \"react\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst CssTextField = withStyles ({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'grey',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'grey',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'grey',\r\n        },\r\n      }\r\n    },\r\n  \r\n})(TextField);\r\n\r\nexport default CssTextField","C:\\Users\\NyMo\\Desktop\\Università\\5 semestre\\Ingegneria del software 2\\NEW\\Project_group19\\client\\src\\Components\\EmptyContainer.js",[],{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"185","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"186","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"187","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"188","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":14},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":14},{"ruleId":"181","severity":1,"message":"190","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"182","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":37},{"ruleId":"181","severity":1,"message":"191","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"192","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"181","severity":1,"message":"191","line":1,"column":22,"nodeType":"183","messageId":"184","endLine":1,"endColumn":32},{"ruleId":"181","severity":1,"message":"182","line":3,"column":17,"nodeType":"183","messageId":"184","endLine":3,"endColumn":26},{"ruleId":"181","severity":1,"message":"190","line":3,"column":28,"nodeType":"183","messageId":"184","endLine":3,"endColumn":36},{"ruleId":"181","severity":1,"message":"193","line":9,"column":7,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"181","severity":1,"message":"194","line":29,"column":11,"nodeType":"183","messageId":"184","endLine":29,"endColumn":18},{"ruleId":"181","severity":1,"message":"195","line":84,"column":15,"nodeType":"183","messageId":"184","endLine":84,"endColumn":18},{"ruleId":"196","severity":1,"message":"197","line":84,"column":45,"nodeType":"198","messageId":"199","endLine":84,"endColumn":47},{"ruleId":"200","severity":1,"message":"201","line":90,"column":8,"nodeType":"202","endLine":90,"endColumn":10,"suggestions":"203"},{"ruleId":"196","severity":1,"message":"197","line":201,"column":33,"nodeType":"198","messageId":"199","endLine":201,"endColumn":35},{"ruleId":"181","severity":1,"message":"192","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"204","line":6,"column":21,"nodeType":"183","messageId":"184","endLine":6,"endColumn":30},{"ruleId":"181","severity":1,"message":"205","line":6,"column":32,"nodeType":"183","messageId":"184","endLine":6,"endColumn":41},{"ruleId":"181","severity":1,"message":"206","line":6,"column":43,"nodeType":"183","messageId":"184","endLine":6,"endColumn":56},{"ruleId":"181","severity":1,"message":"207","line":6,"column":58,"nodeType":"183","messageId":"184","endLine":6,"endColumn":68},{"ruleId":"181","severity":1,"message":"208","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":24},{"ruleId":"181","severity":1,"message":"209","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":24},{"ruleId":"181","severity":1,"message":"210","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"211","line":16,"column":8,"nodeType":"183","messageId":"184","endLine":16,"endColumn":12},{"ruleId":"181","severity":1,"message":"212","line":18,"column":8,"nodeType":"183","messageId":"184","endLine":18,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":104,"column":26,"nodeType":"215","messageId":"216","endLine":104,"endColumn":27},{"ruleId":"181","severity":1,"message":"192","line":6,"column":10,"nodeType":"183","messageId":"184","endLine":6,"endColumn":19},{"ruleId":"181","severity":1,"message":"204","line":6,"column":21,"nodeType":"183","messageId":"184","endLine":6,"endColumn":30},{"ruleId":"181","severity":1,"message":"205","line":6,"column":32,"nodeType":"183","messageId":"184","endLine":6,"endColumn":41},{"ruleId":"181","severity":1,"message":"206","line":6,"column":43,"nodeType":"183","messageId":"184","endLine":6,"endColumn":56},{"ruleId":"181","severity":1,"message":"207","line":6,"column":58,"nodeType":"183","messageId":"184","endLine":6,"endColumn":68},{"ruleId":"181","severity":1,"message":"208","line":7,"column":10,"nodeType":"183","messageId":"184","endLine":7,"endColumn":24},{"ruleId":"181","severity":1,"message":"209","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":24},{"ruleId":"181","severity":1,"message":"210","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"211","line":16,"column":8,"nodeType":"183","messageId":"184","endLine":16,"endColumn":12},{"ruleId":"181","severity":1,"message":"212","line":18,"column":8,"nodeType":"183","messageId":"184","endLine":18,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"189","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"217","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":13},{"ruleId":"181","severity":1,"message":"218","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":12},{"ruleId":"181","severity":1,"message":"219","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":24},{"ruleId":"181","severity":1,"message":"220","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":25},{"ruleId":"181","severity":1,"message":"221","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":23},{"ruleId":"181","severity":1,"message":"222","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":19},{"ruleId":"181","severity":1,"message":"223","line":13,"column":8,"nodeType":"183","messageId":"184","endLine":13,"endColumn":23},{"ruleId":"181","severity":1,"message":"224","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":24},{"ruleId":"181","severity":1,"message":"225","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":22},{"ruleId":"181","severity":1,"message":"226","line":23,"column":26,"nodeType":"183","messageId":"184","endLine":23,"endColumn":33},{"ruleId":"181","severity":1,"message":"227","line":24,"column":32,"nodeType":"183","messageId":"184","endLine":24,"endColumn":45},{"ruleId":"181","severity":1,"message":"228","line":26,"column":11,"nodeType":"183","messageId":"184","endLine":26,"endColumn":22},{"ruleId":"181","severity":1,"message":"229","line":31,"column":11,"nodeType":"183","messageId":"184","endLine":31,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"181","severity":1,"message":"192","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":17},{"ruleId":"181","severity":1,"message":"230","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":22},{"ruleId":"181","severity":1,"message":"207","line":11,"column":22,"nodeType":"183","messageId":"184","endLine":11,"endColumn":32},{"ruleId":"231","severity":1,"message":"232","line":57,"column":40,"nodeType":"215","messageId":"233","endLine":57,"endColumn":42},{"ruleId":"231","severity":1,"message":"232","line":57,"column":87,"nodeType":"215","messageId":"233","endLine":57,"endColumn":89},{"ruleId":"234","severity":1,"message":"235","line":67,"column":33,"nodeType":"236","messageId":"237","endLine":67,"endColumn":44},{"ruleId":"181","severity":1,"message":"238","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"239","line":80,"column":12,"nodeType":"183","messageId":"184","endLine":80,"endColumn":17},{"ruleId":"200","severity":1,"message":"240","line":93,"column":8,"nodeType":"202","endLine":93,"endColumn":10,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":95,"column":29,"nodeType":"244","endLine":97,"endColumn":103},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"190","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"243","line":55,"column":25,"nodeType":"244","endLine":55,"endColumn":62},{"ruleId":"177","replacedBy":"245"},{"ruleId":"179","replacedBy":"246"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"220","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":25},{"ruleId":"181","severity":1,"message":"221","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":23},{"ruleId":"181","severity":1,"message":"226","line":14,"column":18,"nodeType":"183","messageId":"184","endLine":14,"endColumn":25},{"ruleId":"181","severity":1,"message":"247","line":15,"column":18,"nodeType":"183","messageId":"184","endLine":15,"endColumn":26},{"ruleId":"181","severity":1,"message":"248","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Footer' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Transition' is assigned a value but never used.","'classes' is assigned a value but never used.","'ids' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'get', 'incomingMeteos', 'props.clickedItinId', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["251"],"'InputBase' is defined but never used.","'withTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'withStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Card' is defined but never used.","'Itinerary' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Paper' is defined but never used.","'Grid' is defined but never used.","'PriorityHighIcon' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'OpacityIcon' is defined but never used.","'ThermometerIcon' is defined but never used.","'WeatherWindyIcon' is defined but never used.","'SunglassesIcon' is defined but never used.","'setData' is assigned a value but never used.","'setSecondData' is assigned a value but never used.","'paperstyles' is assigned a value but never used.","'textStyle' is assigned a value but never used.","'EmptyContainer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'PropTypes' is defined but never used.","'added' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetching' and 'props.user'. Either include them or remove the dependency array.",["252"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["249"],["250"],"'setIndex' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [get, incomingMeteos, props.clickedItinId, props.user]",{"range":"257","text":"258"},"Update the dependencies array to be: [fetching, props.user]",{"range":"259","text":"260"},[2811,2813],"[get, incomingMeteos, props.clickedItinId, props.user]",[3109,3111],"[fetching, props.user]"]