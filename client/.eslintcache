[{"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\index.js":"1","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\reportWebVitals.js":"2","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\App.js":"3","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Form.js":"4","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Itinerary.js":"5","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\ItineraryInfo.js":"6","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyParticles.js":"7","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyAccount.js":"8","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignIn.js":"9","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignUp.js":"10","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\HeaderBar.js":"11","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CssTextField.js":"12","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Container.js":"13","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MeteoCard.js":"14","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CurrentCard.js":"15","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Card.js":"16"},{"size":356,"mtime":1607897729918,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1607513624883,"results":"19","hashOfConfig":"18"},{"size":8145,"mtime":1608029362318,"results":"20","hashOfConfig":"18"},{"size":11073,"mtime":1608027872146,"results":"21","hashOfConfig":"18"},{"size":13088,"mtime":1607965697076,"results":"22","hashOfConfig":"18"},{"size":14256,"mtime":1608029341902,"results":"23","hashOfConfig":"18"},{"size":686,"mtime":1607897729875,"results":"24","hashOfConfig":"18"},{"size":14864,"mtime":1607965630200,"results":"25","hashOfConfig":"18"},{"size":6561,"mtime":1608028789356,"results":"26","hashOfConfig":"18"},{"size":7321,"mtime":1608028861410,"results":"27","hashOfConfig":"18"},{"size":8214,"mtime":1607965922930,"results":"28","hashOfConfig":"18"},{"size":474,"mtime":1607882274785,"results":"29","hashOfConfig":"18"},{"size":1658,"mtime":1607897729835,"results":"30","hashOfConfig":"18"},{"size":10636,"mtime":1607897729859,"results":"31","hashOfConfig":"18"},{"size":5055,"mtime":1607882274791,"results":"32","hashOfConfig":"18"},{"size":5201,"mtime":1607897729829,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1gxec6b",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\index.js",[],["70","71"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\reportWebVitals.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\App.js",["72","73","74"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Form.js",["75","76","77"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Itinerary.js",["78"],"import { FixedSizeList } from 'react-window'\r\nimport { makeStyles, Typography } from \"@material-ui/core\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssTextField from \"./CssTextField\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InformationOutlineIcon from \"mdi-react/InformationOutlineIcon\"\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MapMarkerPathIcon from 'mdi-react/MapMarkerPathIcon'\r\nimport React, { useState, useEffect } from \"react\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    cssLabel: {\r\n        color: \"black\"\r\n    },\r\n\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'black !important'\r\n    },\r\n\r\n    multilineColor: {\r\n        color: \"black\"\r\n    },\r\n}));\r\n\r\nfunction Itinerary(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [delClickedItin, setDelClickedItin] = useState(\"\");\r\n    const [itinData, setItinData] = useState([])\r\n    const [done, setDone] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    // COMPONENT DID MOUNT\r\n    useEffect(() => {\r\n        fetching();\r\n    }, [])\r\n\r\n    async function fetching() {\r\n        setLoading(true);\r\n        await fetch('/itineraries/' + props.user, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n            .then(function (data) {\r\n                setItinData(data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => console.error(error))\r\n\r\n    }\r\n\r\n    \r\n    // HANDLERS\r\n    \r\n    async function handleDelete(event) {\r\n        \r\n        await fetch('/itineraries', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'DELETE', \r\n            body: JSON.stringify({\r\n                \"user_id\": props.user,\r\n                \"itinerary_id\": delClickedItin\r\n            })\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n        })\r\n        .catch(error => console.error(error));\r\n        \r\n        setOpenPopUp(false);\r\n        fetching();\r\n        \r\n    }\r\n    \r\n    async function handleInfo(event) {\r\n        \r\n        props.setClickedItinId(event.target.id);\r\n        props.setClickedItinName(event.target.getAttribute(\"name\"))\r\n        \r\n        await fetch('/meteoComponents/' + props.user + \"&\" + event.target.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            props.setClickedItinMeteos(data);\r\n        })\r\n        .catch(error => console.error(error))\r\n        setDone(true);\r\n        \r\n    };\r\n    \r\n    async function addItinerary(){\r\n        await fetch('/itineraries' , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"itinerary_name\": name,\r\n                \"user_id\": props.user\r\n            })\r\n        }).then(response => response.json())\r\n        .then(function (data) {\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n\r\n        setName(\"\");\r\n        fetching();\r\n    }\r\n    \r\n    function handleClick() {\r\n        setOpen(true);\r\n    }\r\n    \r\n    function handleCancel() {\r\n        setOpen(false);\r\n    }\r\n    \r\n    function handleCancelDel() {\r\n        setOpenPopUp(false);\r\n    }\r\n    \r\n    function handleClickDel(event){\r\n        setDelClickedItin(event.target.id)\r\n        setOpenPopUp(true);\r\n    }\r\n\r\n    function handleDone() {\r\n        setOpen(false);\r\n        addItinerary();\r\n    }\r\n    \r\n    function handleChange(event){\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    // RENDER DELLE RIGHE\r\n    function renderRow() {\r\n        return (\r\n            <div>\r\n                {itinData.map(item => (\r\n                    <div\r\n                        key={item._id}\r\n                        className=\"itineraryDiv\"\r\n                    >\r\n                        <ListItem\r\n                            style={{ \r\n                                color: \"white\", \r\n                                background: \"linear-gradient(to right, rgba(255,255,255,0.8),rgba(112,112,112,0.7))\" , \r\n                                borderRadius : \"15px\"\r\n                            }}\r\n                        >\r\n                            <ListItemText style={{ pointerEvents: \"none\", color: \"black\" }} >\r\n                                <h2> {item.name} </h2>\r\n                            </ListItemText>\r\n\r\n                            <div\r\n                                onClick={handleInfo}\r\n                                id={item._id}\r\n                                name={item.name}\r\n                            >\r\n                                <IconButton  style={{ pointerEvents: \"none\" }}>\r\n                                    <InformationOutlineIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                            <div\r\n                                onClick={handleClickDel}\r\n                                id={item._id}\r\n                                name={item.name}\r\n                            >\r\n                                <IconButton style={{ pointerEvents: \"none\" }} variant=\"outlined\">\r\n                                    <DeleteIcon style={{ pointerEvents: \"none\" }} />\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                        </ListItem>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    // RENDERING\r\n    return (\r\n        <div>\r\n            {done ?\r\n                <Redirect to={\"/myitinerary\"} /> :\r\n                \r\n                <Container component=\"main\" maxWidth=\"xs\" style={{ paddingTop: 0 }}>\r\n\r\n                    <div className={classes.paper}>\r\n                        <MapMarkerPathIcon size={45} style={{ color: \"white\", marginBottom: \"8px\" }} />\r\n                        <Typography \r\n                            style={{ color: \"white\", marginBottom: \"3%\" }} \r\n                            component=\"h5\" \r\n                            variant=\"h5\"\r\n                        >\r\n                            MY ITINERARIES\r\n                        </Typography>\r\n                        <br />\r\n                    </div>\r\n\r\n                    <Box\r\n                        component=\"div\"\r\n                        border={2}\r\n                        mx={0}\r\n                        mt={5}\r\n                        pt={1}\r\n                        pb={1}\r\n                        boxShadow={10}\r\n                        style={{ textAlign: \"center\", borderColor: \"rgba(0,0,0,0.3)\", color: \"white\", background: \"rgba(0,0,0,0.2)\", borderRadius : \"16px\" }}\r\n                    >\r\n                        {loading ?\r\n                            <div className={classes.root}>\r\n                                <CircularProgress style={{ color: \"white\" }} />\r\n                            </div> :\r\n                            <FixedSizeList\r\n                                height={270}\r\n                                width={300}\r\n                                itemSize={600}\r\n                                itemCount={1}\r\n                                style={{ position: \"relative\", margin: \"auto\" }}\r\n                            >\r\n                                {renderRow}\r\n                            </FixedSizeList>\r\n                        }\r\n                    </Box>\r\n\r\n                    <div className={classes.button}>\r\n                        <Button\r\n                            className=\"btn\"\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={handleClick}\r\n                            style={{color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth:\"1px\"}}\r\n                        >\r\n                            Add itinerary\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            }\r\n\r\n                        \r\n            <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">ADD A NEW ITINERARY</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{color: \"black\"}}>\r\n                        Insert the name of the new itinerary\r\n                    </DialogContentText>\r\n                    <CssTextField\r\n                        autoFocus\r\n                        style={{width: \"100%\" }}\r\n                        id=\"outlined-basic\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        name=\"name\"\r\n                        InputProps={{\r\n                            className: classes.multilineColor,\r\n                            classes: {\r\n                                root: classes.cssOutlinedInput,\r\n                                notchedOutline: classes.notchedOutline\r\n                            }\r\n    \r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes: {\r\n                                root: classes.cssLabel,\r\n                            },\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancel} style={{color: \"red\"}}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button \r\n                        onClick={handleDone} \r\n                        variant=\"outlined\"\r\n                        style={{color: \"black\", borderColor: \"black\"}}\r\n                    >\r\n                        <p>Done</p>\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openPopUp} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">DELETE ITINERARY</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelDel} style={{color: \"black\"}}>\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <div>\r\n                        <Button \r\n                            onClick={handleDelete} \r\n                            variant=\"contained\"\r\n                            style={{color: \"black\", borderColor: \"black\", background:\"red\"}}\r\n                            >\r\n                            <p>YES</p>\r\n                        </Button>\r\n                    </div>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Itinerary","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\ItineraryInfo.js",["79","80"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyParticles.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyAccount.js",["81"],"import { Link } from \"react-router-dom\"\r\nimport { makeStyles, Typography } from \"@material-ui/core\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssTextField from \"./CssTextField\"\r\nimport DeleteIcon from '@material-ui/icons/Delete'; \r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MapMarkerPathIcon from 'mdi-react/MapMarkerPathIcon'\r\nimport Person from \"@material-ui/icons/Person\"\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(20),\r\n        marginBottom: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    cssLabel: {\r\n        color: \"black\"\r\n    },\r\n\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'black !important'\r\n    },\r\n\r\n    multilineColor: {\r\n        color: \"black\"\r\n    },\r\n}));\r\n\r\n\r\nfunction MyAccount(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [currentEmail, setCurrentEmail] = useState(\"\");\r\n    const [deleted, setDeleted] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [names, setNames] = useState(\"\")\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [openDelPopUp, setOpenDelPopUp] = useState(false);\r\n    const [openEmailPopUp, setOpenEmailPopUp] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, [])\r\n\r\n    async function fetchUser(){\r\n        await fetch(\"/users/\" + props.user_id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method:\"GET\"\r\n        }).then(resp => resp.json())\r\n        .then(function(data) {\r\n            setCurrentEmail(data.email)\r\n            setNames(data.itinerary.map(item => item.name))\r\n            setLoading(false);\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    function handleClickDel() {\r\n        setOpenDelPopUp(true);\r\n    }\r\n\r\n    function handleCancelDel() {\r\n        setOpenDelPopUp(false);\r\n    }\r\n\r\n    function handleCancel() {\r\n        setOpenEmailPopUp(false)\r\n    }\r\n\r\n    function handleClickEmail() {\r\n        setOpenEmailPopUp(true);\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setNewEmail(event.target.value);\r\n    }\r\n\r\n    async function handleDelete() {\r\n        await fetch(\"/users\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n                \"user_id\": props.user_id\r\n            })\r\n        }).then((resp) => resp.json())\r\n            .then(function (data) {\r\n            }).catch(error => console.log(error))\r\n\r\n        setOpenDelPopUp(false);\r\n        props.setLogged(0);\r\n        setDeleted(true)\r\n\r\n    }\r\n\r\n    async function handleDone() {\r\n\r\n        setLoading(true);\r\n        await fetch(\"/users/\" + props.user_id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({\r\n                \"email\": newEmail\r\n            })\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n                if (data.error != null) {\r\n                    window.alert(data.error);\r\n                    console.log(\"ERROR\");\r\n                } else {\r\n                    setCurrentEmail(newEmail);\r\n                }\r\n        }).catch(error => console.log(error))\r\n\r\n        setOpenEmailPopUp(false);\r\n        setNewEmail(\"\")\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n\r\n\r\n    function renderItems() {\r\n        return Object.keys(names).map(key =>\r\n            <li\r\n                style={{ fontSize: \"20px\", listStylePosition: \"inside\" }}\r\n                key={key}\r\n            >\r\n                {names[key]}\r\n            </li>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {deleted ? <Redirect to={\"/\"} /> :\r\n                <div>\r\n                    <Container\r\n                        component=\"main\"\r\n                        maxWidth=\"sm\"\r\n                        style={{ \r\n                            paddingTop: 0, \r\n                            justify:\"center\", \r\n                            alignItems:\"center\", \r\n                        }}\r\n                    >\r\n\r\n                        <div className={classes.paper}>\r\n                            <Person size={45} style={{ color: \"white\", marginBottom: \"8px\" }} />\r\n                            <Typography\r\n                                style={{ color: \"white\", marginBottom: \"3%\" }}\r\n                                component=\"h5\"\r\n                                variant=\"h5\"\r\n                            >\r\n                                MY ACCOUNT\r\n                            </Typography>\r\n                            <br />\r\n                        </div>\r\n\r\n                        <Box\r\n                            component=\"div\"\r\n                            border={2}\r\n                            mx={0}\r\n                            pt={1}\r\n                            pb={1}\r\n                            pl={3}\r\n                            pr={3}\r\n                            boxShadow={13}\r\n                            style={{ \r\n                                textAlign: \"center\", \r\n                                borderColor: \"rgba(0,0,0,0.3)\", \r\n                                borderRadius : \"16px\",\r\n                                color: \"white\", \r\n                                background: \"rgba(0,0,0,0.2)\" \r\n                            }}\r\n                        >\r\n                            {loading ?\r\n                                <div className={classes.root}>\r\n                                    <CircularProgress style={{ color: \"white\" }} />\r\n                                </div>\r\n                                :\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    spacing={3}\r\n                                    pl={1}\r\n                                    pr={1}\r\n                                >\r\n                                    <Grid item>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            alignItems=\"center\"\r\n                                            justify=\"center\"\r\n                                            spacing={5}\r\n                                        >\r\n                                            <Grid item>\r\n                                                <h1 style={{ fontSize: \"20px\" }}>Email: {currentEmail}</h1>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Button\r\n                                                    className=\"btn\"\r\n                                                    size=\"small\"\r\n                                                    style={{ color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"1px\" }}\r\n                                                    startIcon={<MailIcon />}\r\n                                                    onClick={handleClickEmail}\r\n                                                >\r\n                                                    change email\r\n                                                </Button>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid\r\n                                            container\r\n                                            direction=\"row\"\r\n                                            alignItems=\"center\"\r\n                                            justify=\"center\"\r\n                                            spacing={5}\r\n                                        >\r\n                                            <Grid item>\r\n                                                <h1 style={{ fontSize: \"20px\" }}> List of the itineraries: </h1>\r\n                                                <ul>\r\n                                                    {renderItems()}\r\n                                                </ul>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Link to={\"/itinerary\"} style={{textDecoration:\"none\"}}>\r\n                                                    <Button\r\n                                                        className=\"btn\"\r\n                                                        size=\"small\"\r\n                                                        style={{ color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"1px\" }}\r\n                                                        startIcon={<MapMarkerPathIcon/>}\r\n                                                    >\r\n                                                        My itineraries\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            }\r\n                        </Box>\r\n                        <div className={classes.button}>\r\n                            <Button\r\n                                className=\"btn\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                startIcon={<DeleteIcon />}\r\n                                onClick={handleClickDel}\r\n                                style={{ color: \"black\", borderStyle: \"solid\", borderColor: \"black\", borderWidth: \"1px\" }}\r\n                            >\r\n                                DELETE ACCOUNT\r\n                            </Button>\r\n                        </div>\r\n                    </Container>\r\n\r\n                    <Dialog open={openDelPopUp} onClose={handleCancelDel} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">DELETE ACCOUNT</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Are you sure you want to delete your account? This action is irreversible.\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleCancelDel} style={{ color: \"black\" }}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <div>\r\n                                <Button\r\n                                    onClick={handleDelete}\r\n                                    variant=\"contained\"\r\n                                    style={{ color: \"black\", borderColor: \"black\", background: \"red\" }}\r\n                                >\r\n                                    <p>YES</p>\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </DialogActions>\r\n                    </Dialog>\r\n\r\n\r\n\r\n                    <Dialog open={openEmailPopUp} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">CHANGE EMAIL</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText style={{ color: \"black\" }}>\r\n                                Insert the new email\r\n                    </DialogContentText>\r\n                            <CssTextField\r\n                                autoFocus\r\n                                style={{ width: \"100%\" }}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                value={newEmail}\r\n                                onChange={handleChange}\r\n                                name=\"email\"\r\n                                InputProps={{\r\n                                    className: classes.multilineColor,\r\n                                    classes: {\r\n                                        root: classes.cssOutlinedInput,\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.cssLabel,\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleCancel} style={{ color: \"red\" }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={handleDone}\r\n                                variant=\"outlined\"\r\n                                style={{ color: \"black\", borderColor: \"black\" }}\r\n                            >\r\n                                <p>Done</p>\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyAccount","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignIn.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignUp.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\HeaderBar.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CssTextField.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Container.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MeteoCard.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CurrentCard.js",["82"],"import Box from \"@material-ui/core/Box\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport React from \"react\"\r\nimport SunglassesIcon from 'mdi-react/SunglassesIcon'\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\n\r\nfunction CurrentCard(props) {\r\n\r\n    function round(value, precision) {\r\n        var multiplier = Math.pow(10, precision || 0);\r\n        return Math.round(value * multiplier) / multiplier;\r\n    }\r\n\r\n    function  toTextualDescription(degree){\r\n        if (degree>337.5) \r\n            return 'N'\r\n        if (degree>292.5) \r\n            return 'NW'\r\n        if (degree>247.5) \r\n            return 'W'\r\n        if (degree>202.5) \r\n            return 'SW'\r\n        if (degree>157.5) \r\n            return 'S'\r\n        if (degree>122.5) \r\n            return 'SE'\r\n        if (degree>67.5) \r\n            return 'E'\r\n        if (degree>22.5) \r\n            return 'NE'\r\n        return 'N';\r\n    }\r\n\r\n    return(\r\n        <div>     \r\n        \r\n            <Box\r\n                mt=\"auto\"\r\n                mr=\"auto\"\r\n                mb=\"auto\"\r\n                ml=\"auto\"\r\n                width={350}\r\n                height={280}\r\n                borderRadius={16}\r\n                boxShadow=\"20\"\r\n                style = {{\r\n                    backgroundColor : \"rgba(255,255,255,0.5)\"\r\n                }}\r\n            >\r\n                <Grid container direction=\"column\" justify= \"center\" alignItems = \"center\">\r\n                    <Grid item style = {{padding : 0}}>\r\n                        <img src={props.incomingData.icon} />\r\n                        <h2 style = {{color : \"Black\", fontSize : \"30px\"}}>{props.incomingData.main}</h2>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container direction = \"row\" justify = \"center\" alignItems = \"center\" spacing = {6} style = {{marginTop : 0}}>\r\n                            <Grid item>\r\n                                <Grid item >\r\n                                    <Grid container direction = \"column\" alignItems = \"center\" spacing = {1}>\r\n                                        <Grid item>\r\n                                            <ThermometerIcon size = {30}/>\r\n                                            <h3>{round(props.incomingData.temp,1) + \"°\"}</h3>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#008fd6\"}}>\r\n                                                    {round(props.incomingData.temp_Min,1) + \"°\"}\r\n                                                </p>\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#b30000\"}}>\r\n                                                    {round(props.incomingData.temp_Max,1) + \"°\"}\r\n                                                </p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <OpacityIcon style = {{ fontSize : \"30px\"}}/>\r\n                                <h3>{props.incomingData.humidity + \"%\"}</h3>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <Grid container direction = \"column\" alignItems = \"center\" spacing = {1} >\r\n                                    <Grid item>\r\n                                            <WeatherWindyIcon size = {30} />\r\n                                            <h3>{round(props.incomingData.wind_speed,1)}</h3>\r\n                                            <h6>km/h</h6>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        {toTextualDescription(props.incomingData.wind_deg)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <SunglassesIcon size = {30} />\r\n                                <br/>\r\n                                <h3>{props.incomingData.uvi}</h3>\r\n                                <p style={{fontWeight : \"bold\"}}>UV</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CurrentCard","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Card.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":28,"column":21,"nodeType":"89","messageId":"90","endLine":28,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":31,"column":5,"nodeType":"93","endLine":31,"endColumn":7,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":53,"column":8,"nodeType":"89","messageId":"90","endLine":53,"endColumn":10},{"ruleId":"87","severity":1,"message":"95","line":54,"column":40,"nodeType":"89","messageId":"90","endLine":54,"endColumn":42},{"ruleId":"87","severity":1,"message":"95","line":54,"column":87,"nodeType":"89","messageId":"90","endLine":54,"endColumn":89},{"ruleId":"96","severity":1,"message":"97","line":64,"column":33,"nodeType":"98","messageId":"99","endLine":64,"endColumn":44},{"ruleId":"91","severity":1,"message":"100","line":81,"column":8,"nodeType":"93","endLine":81,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":95,"column":15,"nodeType":"104","messageId":"105","endLine":95,"endColumn":18},{"ruleId":"91","severity":1,"message":"106","line":105,"column":8,"nodeType":"93","endLine":105,"endColumn":10,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"108","line":69,"column":8,"nodeType":"93","endLine":69,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":55,"column":25,"nodeType":"112","endLine":55,"endColumn":62},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkToken' and 'user.user_id'. Either include them or remove the dependency array.","ArrayExpression",["115"],"Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'fetching'. Either include it or remove the dependency array.",["116"],"no-unused-vars","'ids' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'patchIfProblems'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["118"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [checkToken, user.user_id]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetching]",{"range":"129","text":"130"},"Update the dependencies array to be: [patchIfProblems]",{"range":"131","text":"132"},"Update the dependencies array to be: [fetchUser]",{"range":"133","text":"134"},[1184,1186],"[checkToken, user.user_id]",[2583,2585],"[fetching]",[3344,3346],"[patchIfProblems]",[2282,2284],"[fetchUser]"]