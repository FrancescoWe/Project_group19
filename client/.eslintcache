[{"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\index.js":"1","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\reportWebVitals.js":"2","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\App.js":"3","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Form.js":"4","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Itinerary.js":"5","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\ItineraryInfo.js":"6","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyParticles.js":"7","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyAccount.js":"8","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignIn.js":"9","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignUp.js":"10","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\HeaderBar.js":"11","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CssTextField.js":"12","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Container.js":"13","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MeteoCard.js":"14","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CurrentCard.js":"15","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Card.js":"16"},{"size":356,"mtime":1607897729918,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1607513624883,"results":"19","hashOfConfig":"18"},{"size":7895,"mtime":1607897729823,"results":"20","hashOfConfig":"18"},{"size":9436,"mtime":1607963572441,"results":"21","hashOfConfig":"18"},{"size":13088,"mtime":1607965697076,"results":"22","hashOfConfig":"18"},{"size":13884,"mtime":1607898472520,"results":"23","hashOfConfig":"18"},{"size":686,"mtime":1607897729875,"results":"24","hashOfConfig":"18"},{"size":14864,"mtime":1607965630200,"results":"25","hashOfConfig":"18"},{"size":6328,"mtime":1607897729882,"results":"26","hashOfConfig":"18"},{"size":7207,"mtime":1607897729888,"results":"27","hashOfConfig":"18"},{"size":8214,"mtime":1607965922930,"results":"28","hashOfConfig":"18"},{"size":474,"mtime":1607882274785,"results":"29","hashOfConfig":"18"},{"size":1658,"mtime":1607897729835,"results":"30","hashOfConfig":"18"},{"size":10636,"mtime":1607897729859,"results":"31","hashOfConfig":"18"},{"size":5055,"mtime":1607882274791,"results":"32","hashOfConfig":"18"},{"size":5201,"mtime":1607897729829,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1gxec6b",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\index.js",[],["70","71"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\reportWebVitals.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\App.js",["72","73","74"],"import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Form from \"./Form\"\r\nimport HeaderBar from \"./HeaderBar\"\r\nimport Itinerary from \"./Itinerary\"\r\nimport ItineraryInfo from \"./ItineraryInfo\"\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport MyAccount from \"./MyAccount\"\r\nimport MyParticles from './MyParticles'\r\nimport React, { useState, useEffect } from \"react\"\r\nimport SignIn from \"./SignIn\"\r\nimport SignUp from \"./SignUp\"\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [user, setLogged] = useState({logged : false,\r\n                                      user_id : \"\",\r\n                                      snackBarOpensLoginControl : false,\r\n                                      snackBarOpensLogOutControl : false,\r\n                                      snackBarOpensSignUpControl : false})\r\n  const [clickedItinMeteos, setClickedItinMeteos] = useState([]);\r\n  const [clickedItinId, setClickedItinId] = useState(\"\");\r\n  const [clickedItinName, setClickedItinName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(user.user_id == \"\"){\r\n      checkToken()\r\n    }\r\n  },[])\r\n\r\n  const signInDone = (userID) => {\r\n    setLogged({logged : true,//checkToken()\r\n              user_id : userID,\r\n              snackBarOpensLoginControl : true,\r\n              snackBarOpensLogOutControl : false,\r\n              snackBarOpensSignUpControl : false})\r\n  }\r\n\r\n  const signUpDone = () => {\r\n    setLogged({logged : false, \r\n              user_id : \"\",\r\n              snackBarOpensLoginControl : false,\r\n              snackBarOpensLogOutControl : false,\r\n              snackBarOpensSignUpControl : true})\r\n  }\r\n\r\n\r\n\r\n  const logOut = (val) => {       //se il valore passato Ã¨ 0 l' utente si slogga altrimenti si logga (necessario solo per l' alert)\r\n    localStorage.setItem('token',\"\");\r\n    val==0 ? \r\n      setLogged({logged : false, \r\n                user_id : \"\",\r\n                snackBarOpensLoginControl : false,\r\n                snackBarOpensLogOutControl : true,\r\n                snackBarOpensSignUpControl : false})\r\n    :\r\n      setLogged({logged : false, \r\n                user_id : \"\",\r\n                snackBarOpensLoginControl : false,\r\n                snackBarOpensLogOutControl : false,\r\n                snackBarOpensSignUpControl : false})\r\n  }\r\n  \r\n  async function validToken(token){\r\n    await fetch(\"/api/provaVerifica\", {\r\n      headers: {\r\n        'auth-token' : token\r\n    },\r\n      method : \"GET\"\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then(function(data) {\r\n        if (data.error != null) {\r\n          alert(\"ERROR,\\n\" + data.error);\r\n          console.log(\"ERROR\");\r\n          return false\r\n        } else { \r\n          setLogged({logged : true,\r\n                    user_id : data._id,\r\n                    snackBarOpensLoginControl : false,\r\n                    snackBarOpensLogOutControl : false,\r\n                    snackBarOpensSignUpControl : false})\r\n          //localStorage.setItem('user-id', data._id);\r\n          return true\r\n        } \r\n      })\r\n        .catch(error => console.error(error));\r\n      return false\r\n  }\r\n  \r\n  async function checkToken(){\r\n    var token= localStorage.getItem(\"token\");\r\n    if(token!=null)\r\n      await validToken(token)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Box \r\n        component=\"div\"\r\n      >\r\n        <MyParticles />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/> \r\n\r\n              <Snackbar\r\n                  style = {{marginTop : \"37px\", marginRight : \"6px\"}}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                  }}\r\n\r\n                  open={user.snackBarOpensLogOutControl}\r\n                  autoHideDuration={850}\r\n                  onClose={() => setLogged({logged : false, \r\n                                      user_id : \"\",\r\n                                      snackBarOpensLoginControl : false,\r\n                                      snackBarOpensLogOutControl : false,\r\n                                      snackBarOpensSignUpControl : false})}\r\n              >\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\r\n                  User logged out.\r\n                </MuiAlert>\r\n              </Snackbar>\r\n\r\n              <Snackbar\r\n                  style = {{marginTop : \"37px\", marginRight : \"6px\"}}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                  }}\r\n\r\n                  open={user.snackBarOpensLoginControl}\r\n                  autoHideDuration={850}\r\n                  onClose={() => setLogged({logged : user.logged, \r\n                                      user_id : user.user_id,\r\n                                      snackBarOpensLoginControl : false,\r\n                                      snackBarOpensLogOutControl : false,\r\n                                      snackBarOpensSignUpControl : false})}\r\n              >\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\r\n                  User logged in.\r\n                </MuiAlert>\r\n              </Snackbar>\r\n\r\n              <Snackbar\r\n                  style = {{marginTop : \"37px\", marginRight : \"6px\"}}\r\n                  anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                  }}\r\n\r\n                  open={user.snackBarOpensSignUpControl}\r\n                  autoHideDuration={850}\r\n                  onClose={() => setLogged({logged : user.logged, \r\n                                      user_id : user.user_id,\r\n                                      snackBarOpensLoginControl : false,\r\n                                      snackBarOpensLogOutControl : false,\r\n                                      snackBarOpensSignUpControl : false})}\r\n              >\r\n                <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\r\n                  User signed up.\r\n                </MuiAlert>\r\n              </Snackbar>\r\n              \r\n              <Form logged = {user.logged}/>\r\n            </Route>\r\n\r\n            <Route exact path=\"/itinerary\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n              <Itinerary \r\n                user = {user.user_id}\r\n                setClickedItinMeteos={setClickedItinMeteos}\r\n                setClickedItinId={setClickedItinId}\r\n                setClickedItinName={setClickedItinName}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/myitinerary\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/> \r\n              <ItineraryInfo \r\n                user = {user.user_id} \r\n                clickedItinMeteos={clickedItinMeteos} \r\n                clickedItinName={clickedItinName}\r\n                clickedItinId={clickedItinId}\r\n              />\r\n            </Route>\r\n            \r\n            <Route exact path=\"/myaccount\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/> \r\n              <MyAccount user_id = {user.user_id} setLogged = {logOut} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/signup\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n              <SignUp setSignedUp = {signUpDone}/>\r\n            </Route>\r\n\r\n            <Route exact path = \"/login\">\r\n                <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n                <SignIn logged = {user.logged} setLogged = {signInDone} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/logout\">\r\n              <HeaderBar logged = {user.logged} setLogged = {logOut}/>\r\n            </Route>\r\n\r\n          </Switch>\r\n      </Box>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Form.js",["75","76","77"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Itinerary.js",["78"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\ItineraryInfo.js",["79","80"],"import 'date-fns';\r\nimport { Link } from \"react-router-dom\"\r\nimport { makeStyles, Typography } from \"@material-ui/core\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssTextField from \"./CssTextField\"\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport MeteoCard from \"./MeteoCard\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom : \"1.5%\",\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    cssLabel: {\r\n        color: \"black\"\r\n    },\r\n    cssOutlinedInput: {\r\n        '&$cssFocused $notchedOutline': {\r\n            borderColor: `${theme.palette.primary.main} !important`,\r\n        }\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: 'black !important'\r\n    },\r\n    multilineColor: {\r\n        color: \"black\"\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction ItineraryInfo(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [incomingMeteos, setIncomingMeteos] = useState(props.clickedItinMeteos);\r\n    const [openPopUp, setOpenPopUp] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [clickedMeteoComp, setClickedMeteoComp] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [name, setName] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date(''));\r\n\r\n    async function patchIfProblems(){\r\n        var tempCurrentDate = new Date().getTime() / 1000\r\n        var currentDate = tempCurrentDate.toFixed(0)\r\n\r\n        const ids = await Promise.all(incomingMeteos.map(async item => {\r\n            if(!item.available || item.date < currentDate){\r\n                await patch(props.user, props.clickedItinId, item._id);\r\n            }\r\n        }));\r\n        get();\r\n    }\r\n\r\n    useEffect(() => {\r\n        patchIfProblems()\r\n    }, [])\r\n\r\n\r\n    async function patch(user_id, itinerary_id, meteo_id){\r\n        await fetch(\"/meteoComponents\" , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: \"PATCH\",\r\n            body: JSON.stringify({\r\n                \"user_id\": user_id,\r\n                \"itinerary_id\": itinerary_id,\r\n                \"meteo_id\": meteo_id\r\n            })\r\n        }).then(response => response.json())\r\n        .then(function(data) {\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            } else {\r\n                console.log(data.success);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n\r\n    }\r\n    \r\n    function handleCancelDel() {\r\n        setOpenPopUp(false);\r\n    }\r\n    \r\n    function handleClickDel(event) {\r\n        setOpenPopUp(true);\r\n    }\r\n    \r\n    async function handleDelete() {\r\n        setLoading(true);\r\n        await fetch('/meteoComponents', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n                \"user_id\": props.user,\r\n                \"itinerary_id\": props.clickedItinId,\r\n                \"meteo_id\": clickedMeteoComp\r\n            })\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            get();\r\n        })\r\n        .catch(error => console.error(error));\r\n        setOpenPopUp(false);\r\n    }\r\n    \r\n    async function get(){\r\n        await fetch('/meteoComponents/' + props.user + \"&\" + props.clickedItinId, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        }).then((resp) => resp.json())\r\n        .then(function (data) {\r\n            setIncomingMeteos(data);\r\n            setLoading(false);\r\n        })\r\n        .catch(error => console.error(error))\r\n    }\r\n    \r\n    \r\n    function handleCancelAdd() {\r\n        setOpen(false)\r\n    }\r\n    \r\n    function handleClickAdd() {\r\n        setOpen(true);\r\n    }\r\n    \r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    \r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n    \r\n    async function handleDone() {\r\n        setLoading(true);\r\n        addStageFetch();\r\n        setOpen(false);\r\n    }\r\n\r\n    async function handleUpdate(){\r\n        setLoading(true);\r\n        await Promise.all(incomingMeteos.map(async item => {\r\n            await patch(props.user, props.clickedItinId, item._id);\r\n        }));\r\n        get();\r\n    }\r\n    \r\n    async function addStageFetch(){\r\n        const unixDate=new Date(selectedDate).getTime()/1000\r\n        await fetch('/meteoComponents' , {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"itinerary_id\": props.clickedItinId,\r\n                \"user_id\": props.user,\r\n                \"cityName\": name,\r\n                \"date\": unixDate,\r\n            })\r\n        }).then(resp => resp.json())\r\n        .then(function (data) {\r\n            if(data.error != null){\r\n                window.alert(data.error);\r\n                console.log(\"ERROR\");\r\n            }\r\n            setName(\"\");\r\n            get()\r\n        })\r\n        .catch(error => {\r\n            window.alert(error);\r\n            console.error(error);\r\n        })\r\n    }\r\n    \r\n    \r\n    function renderCards() {\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                spacing={3}\r\n            >\r\n                {incomingMeteos.map(item => (\r\n                        <MeteoCard\r\n                            key={item._id}\r\n                            item={item}\r\n                            handleClickDel={handleClickDel}\r\n                            setClickedMeteoComp={setClickedMeteoComp}\r\n                        />\r\n                ))}\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar style={{ minHeight: \"40px\", marginTop: \"5px\" }}>\r\n                <Link to={\"/itinerary\"} style={{ textDecoration: 'none' }}>\r\n                    <Button\r\n                        className=\"btn\"\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        startIcon={<KeyboardBackspaceIcon />}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                </Link>\r\n            </Toolbar>\r\n            <Container\r\n                display=\"flex\"\r\n                component=\"main\"\r\n                width=\"70%\"\r\n                style={{ marginTop: \"-0.25%\" }}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Typography style={{ color: \"white\", marginBottom: \"1%\" }} component=\"h5\" variant=\"h5\">\r\n                        STAGES OF THE ITINERARY \"{props.clickedItinName}\"\r\n                    </Typography>\r\n                    <Grid container direction=\"row\" spacing={2} justify=\"center\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Button\r\n                                className=\"btn\"\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                startIcon={<AddIcon />}\r\n                                onClick={handleClickAdd}\r\n                                style={{minWidth:\"155px\"}}\r\n                            >\r\n                                ADD STAGE\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button\r\n                                style={{background: \"linear-gradient(to right, #5c5c5c, #ffffff)\"}}\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                                startIcon={<UpdateIcon />}\r\n                                onClick={handleUpdate}\r\n                            >\r\n                                UPDATE DATA\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                </div>\r\n\r\n                {loading ?\r\n                    <div className={classes.root}>\r\n                        <CircularProgress style={{ color: \"white\" }} />\r\n                    </div> :\r\n                    renderCards()\r\n                }\r\n\r\n            </Container>\r\n\r\n            <Dialog open={openPopUp} onClose={handleCancelDel} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">DELETE STAGE</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete this?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelDel} style={{ color: \"black\" }}>\r\n                        Cancel\r\n                    </Button>\r\n\r\n                    <div>\r\n                        <Button\r\n                            onClick={handleDelete}\r\n                            variant=\"contained\"\r\n                            style={{ color: \"black\", borderColor: \"black\", background: \"red\" }}\r\n                        >\r\n                            <p>YES</p>\r\n                        </Button>\r\n                    </div>\r\n\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={open} onClose={handleCancelAdd} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">ADD A NEW STAGE</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText style={{ color: \"black\" }}>\r\n                        Insert the name of the city\r\n                    </DialogContentText>\r\n                    <CssTextField\r\n                        autoFocus\r\n                        style={{ width: \"100%\" }}\r\n                        id=\"outlined-basic\"\r\n                        label=\"City\"\r\n                        variant=\"outlined\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        name=\"cityName\"\r\n                        InputProps={{\r\n                            className: classes.multilineColor,\r\n                            classes: {\r\n                                root: classes.cssOutlinedInput,\r\n                                notchedOutline: classes.notchedOutline\r\n                            }\r\n\r\n                        }}\r\n                        InputLabelProps={{\r\n                            classes: {\r\n                                root: classes.cssLabel,\r\n                            },\r\n                        }}\r\n                    />\r\n                    <DialogContentText style={{ color: \"black\", marginTop:\"10px\", marginBottom: \"0px\" }}>\r\n                        Pick a date\r\n                    </DialogContentText>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            style={{color: \"black\"}}\r\n                        />\r\n                    </MuiPickersUtilsProvider>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCancelAdd} style={{ color: \"red\" }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleDone}\r\n                        variant=\"outlined\"\r\n                        style={{ color: \"black\", borderColor: \"black\" }}\r\n                    >\r\n                        <p>Done</p>\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItineraryInfo","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyParticles.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MyAccount.js",["81"],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignIn.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\SignUp.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\HeaderBar.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CssTextField.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Container.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\MeteoCard.js",[],"D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\CurrentCard.js",["82"],"import Box from \"@material-ui/core/Box\"\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport OpacityIcon from '@material-ui/icons/Opacity'\r\nimport React from \"react\"\r\nimport SunglassesIcon from 'mdi-react/SunglassesIcon'\r\nimport ThermometerIcon from 'mdi-react/ThermometerIcon'\r\nimport WeatherWindyIcon from 'mdi-react/WeatherWindyIcon'\r\n\r\nfunction CurrentCard(props) {\r\n\r\n    function round(value, precision) {\r\n        var multiplier = Math.pow(10, precision || 0);\r\n        return Math.round(value * multiplier) / multiplier;\r\n    }\r\n\r\n    function  toTextualDescription(degree){\r\n        if (degree>337.5) \r\n            return 'N'\r\n        if (degree>292.5) \r\n            return 'NW'\r\n        if (degree>247.5) \r\n            return 'W'\r\n        if (degree>202.5) \r\n            return 'SW'\r\n        if (degree>157.5) \r\n            return 'S'\r\n        if (degree>122.5) \r\n            return 'SE'\r\n        if (degree>67.5) \r\n            return 'E'\r\n        if (degree>22.5) \r\n            return 'NE'\r\n        return 'N';\r\n    }\r\n\r\n    return(\r\n        <div>     \r\n        \r\n            <Box\r\n                mt=\"auto\"\r\n                mr=\"auto\"\r\n                mb=\"auto\"\r\n                ml=\"auto\"\r\n                width={350}\r\n                height={280}\r\n                borderRadius={16}\r\n                boxShadow=\"20\"\r\n                style = {{\r\n                    backgroundColor : \"rgba(255,255,255,0.5)\"\r\n                }}\r\n            >\r\n                <Grid container direction=\"column\" justify= \"center\" alignItems = \"center\">\r\n                    <Grid item style = {{padding : 0}}>\r\n                        <img src={props.incomingData.icon} />\r\n                        <h2 style = {{color : \"Black\", fontSize : \"30px\"}}>{props.incomingData.main}</h2>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Grid container direction = \"row\" justify = \"center\" alignItems = \"center\" spacing = {6} style = {{marginTop : 0}}>\r\n                            <Grid item>\r\n                                <Grid item >\r\n                                    <Grid container direction = \"column\" alignItems = \"center\" spacing = {1}>\r\n                                        <Grid item>\r\n                                            <ThermometerIcon size = {30}/>\r\n                                            <h3>{round(props.incomingData.temp,1) + \"Â°\"}</h3>\r\n                                        </Grid>\r\n                                        <Grid item >\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#008fd6\"}}>\r\n                                                    {round(props.incomingData.temp_Min,1) + \"Â°\"}\r\n                                                </p>\r\n                                                <p style = {{fontWeight : \"bold\", color:\"#b30000\"}}>\r\n                                                    {round(props.incomingData.temp_Max,1) + \"Â°\"}\r\n                                                </p>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <OpacityIcon style = {{ fontSize : \"30px\"}}/>\r\n                                <h3>{props.incomingData.humidity + \"%\"}</h3>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <Grid container direction = \"column\" alignItems = \"center\" spacing = {1} >\r\n                                    <Grid item>\r\n                                            <WeatherWindyIcon size = {30} />\r\n                                            <h3>{round(props.incomingData.wind_speed,1)}</h3>\r\n                                            <h6>km/h</h6>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        {toTextualDescription(props.incomingData.wind_deg)}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" style = {{marginBottom : \"5%\", marginTop: \"5%\"}} flexItem/>\r\n                            <Grid item>\r\n                                <SunglassesIcon size = {30} />\r\n                                <br/>\r\n                                <h3>{props.incomingData.uvi}</h3>\r\n                                <p style={{fontWeight : \"bold\"}}>UV</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CurrentCard","D:\\Users\\Jeko.3570HYPERK\\Desktop\\Progetto ING\\Project_group19\\client\\src\\Components\\Card.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":28,"column":21,"nodeType":"89","messageId":"90","endLine":28,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":31,"column":5,"nodeType":"93","endLine":31,"endColumn":7,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":53,"column":8,"nodeType":"89","messageId":"90","endLine":53,"endColumn":10},{"ruleId":"87","severity":1,"message":"95","line":54,"column":40,"nodeType":"89","messageId":"90","endLine":54,"endColumn":42},{"ruleId":"87","severity":1,"message":"95","line":54,"column":87,"nodeType":"89","messageId":"90","endLine":54,"endColumn":89},{"ruleId":"96","severity":1,"message":"97","line":64,"column":33,"nodeType":"98","messageId":"99","endLine":64,"endColumn":44},{"ruleId":"91","severity":1,"message":"100","line":81,"column":8,"nodeType":"93","endLine":81,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":83,"column":15,"nodeType":"104","messageId":"105","endLine":83,"endColumn":18},{"ruleId":"91","severity":1,"message":"106","line":93,"column":8,"nodeType":"93","endLine":93,"endColumn":10,"suggestions":"107"},{"ruleId":"91","severity":1,"message":"108","line":69,"column":8,"nodeType":"93","endLine":69,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":55,"column":25,"nodeType":"112","endLine":55,"endColumn":62},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkToken' and 'user.user_id'. Either include them or remove the dependency array.","ArrayExpression",["115"],"Expected '!==' and instead saw '!='.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'fetching'. Either include it or remove the dependency array.",["116"],"no-unused-vars","'ids' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'patchIfProblems'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["118"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [checkToken, user.user_id]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetching]",{"range":"129","text":"130"},"Update the dependencies array to be: [patchIfProblems]",{"range":"131","text":"132"},"Update the dependencies array to be: [fetchUser]",{"range":"133","text":"134"},[1183,1185],"[checkToken, user.user_id]",[2583,2585],"[fetching]",[3046,3048],"[patchIfProblems]",[2282,2284],"[fetchUser]"]